// sets descriptions for commands/variables/etc
// usage: setdesc <id> <description> "usage"
setdesc "kick" "kicks a player from the server" "<clientnum>"
setdesc "allow" "sets a ban exemption for a player on the server" "<clientnum>"
setdesc "ban" "bans a player from the server" "<clientnum>"
setdesc "mute" "mutes a player on the server" "<clientnum>"
setdesc "limit" "limits team changing for a player on the server" "<clientnum>"
setdesc "quit" "quits the game"
setdesc "version" "game version for scripts" "<version>"
setdesc "kidmode" "enables or disables kid mode, which reduces blood and death effects somewhat;^n1 = enable reduced gore, defaults to 0" "<bool>"
setdesc "servertype" "type of server, 1 = private (does not register with masterserver), 2 = public, 3 = dedicated" "<value>"
setdesc "hasoctapaks" "mega hack;^ntry to find Cube 2, done after our own data so as to not clobber stuff" "<value>"
setdesc "autosavebackups" "make backups;^n0 = off, 1 = single backup, 2 = named backup, 3/4 = same as 1/2 with move to ^"backups/^"" "<value>"
setdesc "autoreloading" "0 = never, 1 = when empty, 2 = weapons that don't add a full clip, 3 = always (+1 zooming weaps too)" "<value>"
setdesc "skipspawnweapon" "skip spawnweapon;^n0 = never, 1 = if numweaps > 1 (+1), 3 = if carry > 0 (+2), 6 = always" "<value>"
setdesc "skipmelee" "skip melee;^n0 = never, 1 = if numweaps > 1 (+2), 4 = if carry > 0 (+2), 7 = if carry > 0 and is offset (+2), 10 = always" "<value>"
setdesc "skippistol" "skip pistol;^n0 = never, 1 = if numweaps > 1 (+2), 4 = if carry > 0 (+2), 7 = if carry > 0 and is offset (+2), 10 = always" "<value>"
setdesc "skipgrenade" "skip grenade;^n0 = never, 1 = if numweaps > 1 (+2), 4 = if carry > 0 (+2), 7 = if carry > 0 and is offset (+2), 10 = always" "<value>"
setdesc "weapselectslot" "determines how weapons are selected using the number keys;^n0 = by global weapon numbers, 1 = by temporary pickup slot numbers" "<bool>"
setdesc "showaiinfo" "determines how much info is shown for bots;^n0 = hide bot info, 1 = show bot joins/parts, 2 = show more verbose info" "<value>"
setdesc "demolock" "determines who may record demos;^n0 = helper, 1 = moderator, 2 = administrator, 3 = nobody" "<value>"
setdesc "democount" "determines the maximum amount of demo files that may be saved simultaneously on the server (deletes old demos if exceeded)" "<value>"
setdesc "demomaxsize" "determines the maximum size of individual demo files that may be saved on the server" "<kilobytes>"
setdesc "demoautorec" "determines if demos are automatically recorded each match" "<value>"
setdesc "speclock" "determines who may force players to spectate;^n0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "kicklock" "determines who may kick players;^n0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "allowlock" "determines who may allow players;^n0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "banlock" "determines who may ban players;^n0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "mutelock" "determines who may mute players;^n0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "limitlock" "determines who may limit players;^n0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "vetolock" "determines who may force match votes;^n0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "floodlock" "0 = no flood lock, 1 = lock below helper, 2 = lock below moderator, 3 = lock below administrator, 4 = lock everyone" "<value>"
setdesc "floodmute" "automatically mute player when warned this many times" "<value>"
setdesc "floodtime" "time span to check for floody messages" "<value>"
setdesc "floodlines" "number of lines in aforementioned span before too many" "<value>"
setdesc "autospectate" "determines when the game switches automatically to speactate mode;^n0 = when idle, 1 = when remaining dead for autospecdelay" "<bool>"
setdesc "resetallowsonend" "determines when the allow list is reset;^n0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetbansonend" "determines when the ban list is reset;^n0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetmutesonend" "determines when the mute list is reset;^n0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetlimitsonend" "determines when the limit list is reset;^n0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetvarsonend" "determines when these game variables are reset;^n0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetmmonend" "determines when privilege mode changes are reset;^n0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "gamespeedlock" "determines if gamespeed is locked (also limited by varslock);^n0 = off, 1 = helper, 2 = moderator, 3 = admin, 4 = nobody" "<value>"
setdesc "rotatemodefilter" "determines the modes which can be selected when the server selects the next map,^nconvenient to set using a sum of $modebit* vars (available: editing, deathmatch, capture, defend, bomber, trial),^nexample: (+ $modebitediting $modebitdeathmatch)" "<sum>"
setdesc "rotatemuts" "determines if mutators rotate when the server selects the next map (more than 1 decreases chances)" "<value>"
setdesc "rotatemutsfilter" "determines the mutators which can be selected when the server selects the next map,^nconvenient to set using a sum of $mutsbit* vars (available: multi, team, coop, instagib, medieval, ballistic, duel, survivor, arena, onslaught, jetpack, vampire, expert, resize, gsp1 = first mode variation {ctf-return, dtf-quick, bomber-hold}, gsp2 = second mode variation {ctf-defend, dtf-conquer}, gsp3 = third mode variation {ctf-protect, dtf-king-of-the-hill},^nexample: (+ $mutsbitmulti $mutsbitteam)" "<sum>"
setdesc "kingmaps" "king-of-the-hill maps" "<list>"
setdesc "multimaps" "maps allowed for modes which *require* multi spawns (ctf/bb)" "<list>"
setdesc "modelock" "determines if modes are locked;^n0 = off, 1-3 = helper/moderator/admin only, 4-6 = helper/moderator/admin can only set limited mode and  higher, 7 = no mode selection" "<value>"
setdesc "mapsfilter" "0 = off, 1 = filter based on mutators, 2 = also filter based on players" "<value>"
setdesc "mapslock" "determines if maps are locked;^n0 = off, 1-3 = helper/moderator/admin can select non-allow maps, 4-6 = helper/moderator/admin can select non-rotation maps, 7 = no map selection" "<value>"
setdesc "varslock" "determines if vars are locked;^n0 = off, 1 = helper, 2 = moderator, 3 = admin, 4 = nobody" "<value>"
setdesc "votelock" "determines if votes are locked;^n0 = off, 1-3 = helper/moderator/admin can select recently played maps, 4 = helper/moderator/admin only can vote, 7 = no voting" "<value>"
setdesc "votewait" "time in milliseconds before a player may cast another vote (to avoid flooding)" "<milliseconds>"
setdesc "votestyle" "determines how mid-match votes are handled;^n0 = votes don't pass mid-match, 1 = passes if votethreshold is met, 2 = passes if unanimous" "<milliseconds>"
setdesc "votethreshold" "auto-pass votes when this many agree" "<value>"
setdesc "voteinterm" "0 = must wait entire time, 1 = passes if votethreshold is met, 2 = passes if unanimous" "<value>"
setdesc "smallmapmax" "maximum number of players for a small map" "<value>"
setdesc "mediummapmax" "maximum number of players for a medium map" "<value>"
setdesc "maxalive" "only allow this*numplayers (for current map) to be alive at once" "<value>"
setdesc "maxalivequeue" "toggle queue system (used if number of players exceeds maxalive*numplayers for current map);^n0 = prohibits leaving spectator, 1 = players enter queue" "<value>"
setdesc "maxaliveminimum" "only enables maxalive limit if the number of players is more than or equal to this" "<value>"
setdesc "maxalivethreshold" "only enables maxalive limit if the number of players is more than or equal to this*numplayers (for current map)" "<value>"
setdesc "spawnrotate" "spawn point rotation;^n0 = let client decide, 1 = sequence, 2 = random" "<value>"
setdesc "spawngrenades" "spawn with grenades;^n0 = never, 1 = all but instagib/time-trial, 2 = always" "<value>"
setdesc "spawndelay" "time in milliseconds before players can respawn in most modes" "<millisecond>"
setdesc "instadelay" "time in milliseconds before players can respawn in instagib mutated modes" "<milliseconds>"
setdesc "trialdelay" "time in milliseconds before players can respawn in trial mode" "<milliseconds>"
setdesc "bomberdelay" "delay before spawning in bomber" "<millisecond>"
setdesc "spawnprotect" "time in milliseconds after spawning players cannot be damaged" "<milliseconds>"
setdesc "duelprotect" "time in milliseconds after spawning players cannot be damaged in duel/survivor matches" "<milliseconds>"
setdesc "instaprotect" "time in milliseconds after spawning players cannot be damaged in instagib matches" "<milliseconds>"
setdesc "instaresizeamt" "each kill adds this much size in insta-resize" "<value>"
setdesc "regendelay" "time in milliseconds after being damage before normal regeneration resumes" "<milliseconds>"
setdesc "regentime" "time in milliseconds for which regenerate gives health" "<milliseconds>"
setdesc "regenhealth" "amount of health regneration gives" "<value>"
setdesc "regendecay" "if over maxhealth, decay this amount each regen" "<value>"
setdesc "kamikaze" "determines the level of kamikaze events;^n0 = never, 1 = holding grenade, 2 = have grenade, 3 = always" "<value>"
setdesc "itemsallowed" "determines if items are present in the level;^n0 = never, 1 = all but instagib, 2 = always" "<value>"
setdesc "itemspawntime" "time in milliseconds before items (re)spawn" "<milliseconds>"
setdesc "itemspawndelay" "time in milliseconds after map start items first spawn" "<milliseconds>"
setdesc "itemspawnstyle" "determines the timing of item spawning at map start;^n0 = all at once, 1 = staggered, 2 = random, 3 = randomise between both" "<value>"
setdesc "itemthreshold" "if numitems/(players*maxcarry) is less than this, spawn one of this type" "<value>"
setdesc "timelimit" "time in minutes before round ends;^n0 = off" "<minutes>"
setdesc "overtimeallow" "if scores are equal, go into overtime" "<value>"
setdesc "overtimelimit" "maximum time overtime may last, 0 = forever" "<minutes>"
setdesc "intermlimit" "time in milliseconds intermission lasts" "<milliseconds>"
setdesc "votelimit" "time in milliseconds intermission voting lasts" "<milliseconds>"
setdesc "duelreset" "reset winner in duel" "<value>"
setdesc "duelclear" "determines if items are reset at the end of each round" "<value>"
setdesc "duellimit" "time in milliseconds before next round in duel/survivor" "<milliseconds>"
setdesc "duelcycle" "determines if players are force-cycled after a certain number of wins (bit: 0 = off, 1 = non-team games, 2 = team games)" "<value>"
setdesc "duelcycles" "maximum wins in a row before force-cycling (0 = num team/total players)" "<value>"
setdesc "selfdamage" "determines if the player can damage themselves;^n0 = off, 1 = either hurt self or use teamdamage rules" "<value>"
setdesc "trialstyle" "0 = all players are ghosts, 1 = all players are solid, but can't deal damage, 2 = regular gameplay style, solid+damage" "<value>"
setdesc "teamdamage" "determines if the player can damage team members;^n0 = off, 1 = non-bots damage team, 2 = all players damage team" "<value>"
setdesc "teambalance" "determines the method of team balancing;^n0 = off, 1 = by number then rank, 2 = by rank then number" "<value>"
setdesc "teampersist" "0 = off, 1 = only attempt, 2 = forced" "<value>"
setdesc "pointlimit" "number of points required to end the round (and win) in deathmatch modes" "<value>"
setdesc "capturelimit" "number of captures required to end the round (and win) in ctf" "<value>"
setdesc "capturepoints" "points added to score" "<value>"
setdesc "capturepickuppoints" "points added to score" "<value>"
setdesc "capturethreshold" "automatically drop the flag if the flag-carrier ^"warps^" more than this distance" "<distance>"
setdesc "capturebuffing" "buffed;^n0 = off, &1 = when guarding/secured, &2 = when carrying enemy, &4 = also defending secured, &8 = also defending enemy carrier" "<value>"
setdesc "capturebuffdelay" "buffed when guarding, and for this long after" "<milliseconds>"
setdesc "capturebuffarea" "multiply affinity radius by this much for buff" "<value>"
setdesc "capturebuffdamage" "multiply outgoing damage by this much when buffed" "<value>"
setdesc "capturebuffshield" "divide incoming damage by this much when buffed" "<value>"
setdesc "captureregenbuff" "0 = off, 1 = modify regeneration when buffed" "<value>"
setdesc "captureregendelay" "regen this often when buffed" "<milliseconds>"
setdesc "captureregenextra" "add this to regen when buffed" "<value>"
setdesc "defendlimit" "determines the style of dtf play;^nnumber of points required to end the round (and win) in dtf" "<value>"
setdesc "defendpoints" "number of points given in dtf" "<value>"
setdesc "defendoccupy" "points needed to occupy in regular games" "<value>"
setdesc "defendking" "points needed to occupy in king-of-the-hill" "<value>"
setdesc "defendflags" "flags to init and how;^n0 = init all (neutral), 1 = init neutral and team only, 2 = init team only, 3 = init all (team + neutral + converted)" "<value>"
setdesc "defendbuffing" "buffed;^n0 = off, &1 = when guarding, &2 = when securing, &4 = even when enemies are present" "<value>"
setdesc "defendbuffoccupy" "for defendbuffing&4, must be occupied this much before passing" "<milliseconds>"
setdesc "defendbuffdelay" "buffed for this long after leaving" "<milliseconds>"
setdesc "defendbuffarea" "multiply affinity radius by this much for buff" "<value>"
setdesc "defendbuffdamage" "multiply outgoing damage by this much when buffed" "<value>"
setdesc "defendbuffshield" "divide incoming damage by this much when buffed" "<value>"
setdesc "defendregenbuff" "0 = off, 1 = modify regeneration when buffed" "<value>"
setdesc "defendregendelay" "regen this often when buffed" "<milliseconds>"
setdesc "defendregenextra" "add this to regen when buffed" "<value>"
setdesc "bomberlimit" "finish when score is this or more (non-hold)" "<milliseconds>"
setdesc "bomberholdlimit" "finish when score is this or more (hold)" "<value>"
setdesc "bomberpoints" "points added to score" "<value>"
setdesc "bomberpenalty" "points taken from score" "<value>"
setdesc "bomberpickuppoints" "points added to score" "<value>"
setdesc "bomberholdpoints" "points added to score" "<value>"
setdesc "bomberholdpenalty" "penalty for holding too long" "<value>"
setdesc "bomberreset" "0 = off, 1 = kill winners, 2 = kill everyone" "<value>"
setdesc "bomberthreshold" "automatically drop the bomb if the bomb-carrier ^"warps^" more than this distance" "<distance>"
setdesc "bomberbuffing" "buffed;^n0 = off, &1 = when guarding, &2 = when securing" "<value>"
setdesc "bomberbuffdelay" "buffed for this long after leaving" "<milliseconds>"
setdesc "bomberbuffarea" "multiply affinity radius by this much for buff" "<value>"
setdesc "bomberbuffdamage" "multiply outgoing damage by this much when buffed" "<value>"
setdesc "bomberbuffshield" "divide incoming damage by this much when buffed" "<value>"
setdesc "bomberregenbuff" "0 = off, 1 = modify regeneration when buffed" "<value>"
setdesc "bomberregendelay" "regen this often when buffed" "<milliseconds>"
setdesc "bomberregenextra" "add this to regen when buffed" "<value>"
setdesc "bomberbasket" "you can score by throwing the bomb into the goal" "<value>"
setdesc "botbalance" "determines bot balancing method;^n-1 = always use numplayers, 0 = don't balance, 1 or more = fill only with this*numteams" "<value>"
setdesc "enemyspawntime" "determine length of time before enemies respawn" "<milliseconds>"
setdesc "enemyspawndelay" "determine length of time after map start enemies first spawn" "<milliseconds>"
setdesc "enemyspawnstyle" "determines enemy spawning style, 0 = all at once, 1 = staggered, 2 = random, 3 = randomise between both" "<value>"
setdesc "enemystrength" "scale enemy health values by this much" "<value>"
setdesc "movespeed" "baseline movement speed" "<value>"
setdesc "movecrawl" "multiplier of speed when crawling" "<value>"
setdesc "movesprint" "multiplier of speed when sprinting" "<value>"
setdesc "movejet" "multiplier of speed when using jetpack" "<value>"
setdesc "movestraight" "multiplier of speed when only moving forward" "<value>"
setdesc "movestrafe" "multiplier of speed when strafing" "<value>"
setdesc "moveinair" "multiplier of speed when in-air" "<value>"
setdesc "movestepup" "multiplier of speed when stepping up" "<value>"
setdesc "movestepdown" "multiplier of speed when stepping down" "<value>"
setdesc "jetdelay" "minimum time between jetpack" "<milliseconds>"
setdesc "jetheight" "jetpack maximum height off ground" "<value>"
setdesc "jetdecay" "decay rate of one unit per this many ms" "<value>"
setdesc "jumpspeed" "extra velocity to add when jumping" "<value>"
setdesc "impulsespeed" "extra velocity to add when impulsing" "<value>"
setdesc "impulselimit" "maximum impulse speed" "<value>"
setdesc "impulseboost" "multiplier of impulse when just boosting" "<value>"
setdesc "impulsepower" "power jump modifier" "<value>"
setdesc "impulsedash" "multiplier of impulse when dashing" "<value>"
setdesc "impulsejump" "multiplier of impulse when jumping" "<value>"
setdesc "impulseparkour" "multiplier of impulse when doing other parkour" "<value>"
setdesc "impulseparkourkick" "parkour kick modifier" "<value>"
setdesc "impulseparkourvault" "parkour vault modifier" "<value>"
setdesc "impulseparkournorm" "minimum parkour surface z normal" "<value>"
setdesc "impulseallowed" "determines which impulse actions are allowed (bitwise OR);^n0 = off, 1 = dash, 2 = boost, 4 = sprint, 8 = parkour" "<sum>"
setdesc "impulsestyle" "impulse style;^n0 = off, 1 = touch and count, 2 = count only, 3 = freestyle" "<value>"
setdesc "impulsecount" "number of impulse actions per air transit" "<value>"
setdesc "impulseslip" "time before floor friction kicks back in" "<milliseconds>"
setdesc "impulseslide" "time before powerslides end" "<milliseconds>"
setdesc "impulsedelay" "minimum time between boosts" "<milliseconds>"
setdesc "impulsedashdelay" "minimum time between dashes/powerslides" "<milliseconds>"
setdesc "impulsekickdelay" "minimum time between wall kicks/climbs" "<milliseconds>"
setdesc "impulsevaultmin" "minimum percentage of height for vault" "<value>"
setdesc "impulsevaultmax" "maximum percentage of height for vault" "<value>"
setdesc "impulsemelee" "multiplier of impulse when using melee" "<value>"
setdesc "impulsemeter" "impulse dash length;^n0 = unlimited, anything else = timer" "<value>"
setdesc "impulsecost" "cost of impulse jump" "<value>"
setdesc "impulseskate" "length of time a run along a wall can last" "<value>"
setdesc "impulsesprint" "sprinting counts toward impulse;^n0 = off, anything else = multiplier of time" "<value>"
setdesc "impulsejet" "jetpack impulse meter depletion" "<value>"
setdesc "impulseregen" "impulse regen multiplier" "<value>"
setdesc "impulseregencrouch" "impulse regen modifier when crouching" "<value>"
setdesc "impulseregensprint" "impulse regen modifier when sprinting" "<value>"
setdesc "impulseregenjet" "impulse regen jetpack modifier" "<value>"
setdesc "impulseregenmove" "impulse regen modifier when moving" "<value>"
setdesc "impulseregeninair" "impulse regen modifier when in air" "<value>"
setdesc "impulseregendelay" "delay before impulse regens" "<value>"
setdesc "impulseregenjetdelay" "delay before impulse regens after jetting, -1 = must touch ground" "<value>"
setdesc "zoomlock" "0 = unrestricted, 1 = must be on floor, 2 = also must not be moving, 3 = also must be on flat floor, 4 = must also be crouched" "<value>"
setdesc "zoomlocktime" "time before zoomlock kicks in when in the air" "<milliseconds>"
setdesc "autoshowscores" "1 = when dead, 2 = also in spectv, 3 = and in waittv too" "<value>"
setdesc "showscoresdelay" "otherwise use respawn delay" "<milliseconds>"
setdesc "showlaptimes" "0 = off, 1 = only player, 2 = +humans, 3 = +bots" "<value>"
setdesc "muzzleflash" "0 = off, 1 = only other players, 2 = only thirdperson, 3 = all" "<value>"
setdesc "muzzleflare" "0 = off, 1 = only other players, 2 = only thirdperson, 3 = all" "<value>"
setdesc "underlaydisplay" "0 = only firstperson and alive, 1 = only when alive, 2 = always" "<value>"
setdesc "overlaydisplay" "0 = only firstperson and alive, 1 = only when alive, 2 = always" "<value>"
setdesc "showdamage" "1 shows just damage texture, 2 blends as well" "<value>"
setdesc "showcrosshair" "0 = off, 1 = on, 2 = blend depending on current accuracy level" "<value>"
setdesc "crosshairweapons" "0 = off, 1 = crosshair-specific weapons, 2 = also appy colour" "<value>"
setdesc "cursorstyle" "0 = top left tracking, 1 = center" "<value>"
setdesc "inventorybgskew" "skew items inside by this much" "<value>"
setdesc "inventorybgspace" "for aligning diagonals" "<value>"
setdesc "inventoryhealth" "0 = off, 1 = text, 2 = bar, 3 = bar + text" "<value>"
setdesc "inventoryhealthbartop" "starts from this offset" "<value>"
setdesc "inventoryhealthbarbottom" "ends at this offset" "<value>"
setdesc "inventoryimpulsebartop" "starts from this offset" "<value>"
setdesc "inventoryimpulsebarbottom" "ends at this offset" "<value>"
setdesc "inventorystatus" "0 = off, 1 = text, 2 = icon, 3 = icon + tex" "<value>"
setdesc "radarstyle" "0 = compass-sectional, 1 = compass-distance, 2 = screen-space, 3 = right-corner-positional" "<value>"
setdesc "radaraspect" "0 = off, else = (for radarstyle 0/1) radar forms an ellipse" "<value>"
setdesc "radardist" "0 = use world size" "<value>"
setdesc "radarcornerdist" "0 = use world size" "<value>"
setdesc "radarplayerfilter" "0 = off, 1 = non-team, 2 = team, 3 = only in duel/survivor/edit" "<value>"
setdesc "radardamage" "0 = off, 1 = basic damage, 2 = with killer announce (+1 killer track, +2 and bots), 5 = verbose" "<value>"
setdesc "editradarstyle" "0 = compass-sectional, 1 = compass-distance, 2 = screen-space, 3 = right-corner-positional" "<value>"
setdesc "editradardist" "0 = use world size" "<value>"
setdesc "motionblurfx" "0 = off, 1 = on, 2 = override" "<value>"
setdesc "motionblurmin" "minimum" "<value>"
setdesc "motionblurmax" "maximum" "<value>"
setdesc "motionbluramt" "used for override" "<value>"
setdesc "musictype" "0 = no in-game music, 1 = map music (or random if none), 2 = always random, 3 = map music (silence if none), 4-5 = same as 1-2 but pick new tracks when done" "<value>"
setdesc "musicedit" "0 = no editing music, 1 = map music (or random if none), 2 = always random, 3 = map music (silence if none), 4-5 = same as 1-2 but pick new tracks when done" "<value>"
setdesc "followdead" "0 = never, 1 = in all but duel/survivor, 2 = always" "<value>"
setdesc "specmode" "0 = float, 1 = tv" "<value>"
setdesc "waitmode" "0 = float, 1 = tv in duel/survivor, 2 = tv always" "<value>"
setdesc "spectvrotate" "rotate style, < 0 = absolute angle, 0 = scaled, > 0 = scaled with max angle" "<value>"
setdesc "spectvdead" "0 = never, 1 = in all but duel/survivor, 2 = always" "<value>"
setdesc "deathcamstyle" "0 = no follow, 1 = follow attacker, 2 = follow self" "<value>"
setdesc "zoomdefault" "0 = last used, else defines default level" "<value>"
setdesc "zoomscroll" "0 = stop at min/max, 1 = go to opposite end" "<value>"
setdesc "showobituaries" "0 = off, 1 = only me, 2 = 1 + announcements, 3 = 2 + but dying bots, 4 = 3 + but bot vs bot, 5 = all" "<value>"
setdesc "obitannounce" "0 = off, 1 = only focus, 2 = everyone" "<value>"
setdesc "obitverbose" "0 = extremely simple, 1 = simplified per-weapon, 2 = regular messages" "<value>"
setdesc "obitstyles" " 0 = no obituary styles, 1 = show sprees/dominations/etc" "<value>"
setdesc "showpresence" "0 = never show join/leave, 1 = show only during game, 2 = show when connecting/disconnecting" "<value>"
setdesc "showteamchange" "0 = never show, 1 = show only when switching between, 2 = show when entering match too" "<value>"
setdesc "deathanim" "0 = hide player when dead, 1 = old death animation, 2 = ragdolls" "<value>"
setdesc "deathfade" "0 = don't fade out dead players, 1 = fade them out" "<value>"
setdesc "deathscale" "0 = don't scale out dead players, 1 = scale them out" "<value>"
setdesc "autoloadweap" "0 = off, 1 = auto-set loadout weapons" "<value>"
setdesc "gravity" "gravity" "<value>"
setdesc "impulsekick" "determines the minimum angle to switch between wall kick and run" "<angle>"
setdesc "impulsemethod" "determines which impulse method to use, 0 = none, 1 = power jump, 2 = power slide, 3 = both" "<value>"
setdesc "impulseaction" "determines how impulse action works, 0 = off, 1 = impulse jump, 2 = impulse dash, 3 = both" "<value>"
setdesc "impulseroll" "determines the camera angle tilt when wallrunning" "<angle>"
setdesc "dashstyle" "0 = only with impulse, 1 = double tap" "<value>"
setdesc "crouchstyle" "0 = press and hold, 1 = double-tap toggle, 2 = toggle" "<value>"
setdesc "sprintstyle" "0 = press and hold, 1 = double-tap toggle, 2 = toggle, 3-5 = same, but auto engage if impulsesprint == 0" "<value>"
setdesc "showentdir" "0 = off, 1 = only selected, 2 = always when editing, 3 = always in editmode" "<value>"
setdesc "aboveheadblend" "determines the opacity of all abovehead* vars" "<value>"
setdesc "aboveheaddamage" "shows amount of damage done to a player above their head" "<value>"
setdesc "aboveheadeventsize" "determines the size of event icons above players' heads" "<value>"
setdesc "aboveheadicons" "detemines what type of actions displays icons above player (bitwise OR for affinities and weapons);^n0 = none, 1+ = damage & kill events, 2 = affinity pickups, 4 = weapons pickups" "<value>"
setdesc "aboveheadiconsize" "determines the size of icons handled by aboveheadicons" "<value>"
setdesc "aboveheadnames" "toggles the display of player names above their heads" "<value>"
setdesc "aboveheadnamesize" "determines the size of names for aboveheadnames" "<value>"
setdesc "aboveheadstatus" "toggles display of player status above players' heads, player status is dominating, dominated, death" "<value>"
setdesc "aboveheadstatussize" "determines the size of player status controlled by aboveheadstatus" "<value>"
setdesc "aboveheadteam" "determines how team icons are displayed above player heads;^n0 = do not show, 1 = only teammates, 2 = all teams" "<value>"
setdesc "bloodsize" "sets the size of blood splatter" "<value>"
setdesc "chatconsize" "sets the amount of lines to show in the chat console, this does not include overflow lines" "<value>"
setdesc "chatconblend" "sets the opacity of the chat console" "<value>"
setdesc "chatconscale" "determines the scaling of the chat console text" "<value>"
setdesc "commandscale" "determines the scaling of the command and chat input text" "<value>"
setdesc "conblend" "sets the opacity of the console, this does not include obituaries and affinity events! (flag, bomb)" "<value>"
setdesc "concenter" "toggles alignment of console;^n0 = console is in top left, 1 = console is centered" "<value>"
setdesc "consize" "sets the amount of lines to show in the console, this does not include overflow lines" "<value>"
setdesc "conscale" "determines the scaling of the console text" "<value>"
setdesc "criticaltex" "determines what image is used for the critical hit message" "<value>"
setdesc "dominatetex" "determines what image is used for the ^"dominating!^" event icon" "<value>"
setdesc "dominatedtex" "determines what image is used for the icon that appears over a player's head while dominating" "<value>"
setdesc "dominatingtex" "determines what image is used for the icon that appears over a player's head while being dominated" "<value>"
setdesc "eventblend" "sets the opacity of event icons, (first blood, 2x, 3x, headshot, etc.)" "<value>"
setdesc "eventiconfade" "sets how long event icons should stay on screen" "<value>"
setdesc "eventoffset" "sets the offset for the event icons in your hud, negative values move it downward, positive values move it upward" "<value>"
setdesc "eventscale" "sets the scale of event icons that appear in your hud" "<value>"
setdesc "fullconblend" "sets the opacity of the ^"full^" console, this is when the console is open, and includes obituaries and affinity events. (flag, bomb) excluding those two elements, conblend takes precedence over this variable, yet only affects everything else" "<value>"
setdesc "healthbgtex" "determines what image is used for the background of the healthbar" "<value>"
setdesc "hudblend" "sets the opacity of the entire hud as a whole, this includes both consoles, mouse pointer, and inventory" "<value>"
setdesc "hudsize" "sets the size of the entire hud as a whole, this includes both consoles, menus, inventory, etc" "<value>"
setdesc "inventoryblend" "sets the opacity of the inventory" "<value>"
setdesc "inventorycolour" "toggles the colour of the weapon icons in the weapon bar;^n0 = no colour at all, 1 = only weapon icon is coloured, 2 = both weapon icon and slot number are coloured" "<value>"
setdesc "inventoryglow" "sets the size of the ^"glow^" in the inventory, the ^"glow^" is the splatter/explosion image behind inventory items" "<value>"
setdesc "inventorybgblend" "sets the opacity of the inventory background" "<value>"
setdesc "inventoryimpulse" "sets how the impulse meter is displayed;^n0 = do not show at all, 1 = show textual percentage, 2 = show a bar meter" "<value>"
setdesc "impulsetex" "determines what image is used for the impulse meter" "<value>"
setdesc "inventorysize" "sets the size of the inventory as a whole" "<value>"
setdesc "inventorytone" "sets the tone of various inventory elements;^n0 = no colouring at all, 1 = uses the colour of your profile colour, 2 = uses team colour, this includes grey when you are neutral., 3 = uses team colour, but only for team games. when neutral, your profile colour is used., 4 = uses profile colour, but only for team games. when neutral, grey will be used" "<value>"
setdesc "inventoryweapids" "sets how to display the slot number of the weapons in the weapon bar;^n0 = do not show, 1 = do show, 2 = unknown" "<value>"
setdesc "noticescale" "sets the size of the notices" "<value>"
setdesc "zoomsensitivity" "determines aiming/look sensitivity while zoomed in with the rifle" "<value>"
setdesc "zoomtex" "determines what image is used for the scope on the rifle" "<value>"
setdesc "actorscale" "defines the size of all actors (players, bots, grunts, etc.)" "<value>"
setdesc "adminpass" "sets server admin password, if no password given, it will return the current password" "<value>"
setdesc "aiforcegun" "forces bots' weapon preference, if -1, bots have randomized weapon preferences" "<value>"
setdesc "aipassive" "sets ai to be passive, ie, non-hostile" "<value>"
setdesc "captureresetdelay" "time in milliseconds before a dropped flag automatically resets" "<milliseconds>"
setdesc "maxhealth" "spawnhealth * maxhealth defines the maximum amount of health that can be reached (e.g. standing next to a friendly goal)" "<value>"
setdesc "maxhealthvampire" "spawnhealth * maxhealthvampire defines the maximum amount of health that can be reached by damaging other players in vampire" "<value>"
setdesc "minresizescale" "defines the smallest scaled size a player can become in a match with the resize mutator enabled" "<value>"
setdesc "maxresizescale" "defines the largest scaled size a player can become in a match with the resize mutator enabled" "<value>"
setdesc "maxcarry" "maximum number of weapons a player can carry, plus pistol and grenades" "<value>"
setdesc "spawnhealth" "defines the amount of health you spawn with, and the maximum amount of health to which you will regenerate when damaged, assigning this variable a value of 0 or 1 will cause you to die in one hit" "<value>"
setdesc "zoomtime" "determines how long it takes for the rifle scope to zoom in and out, the rifle uses the primary fire mode unless the scope is fully zoomed in" "<value>"
setdesc "editmat" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<type> <style>"
setdesc "showmat" "toggles the visibility of material volumes" "<value>"
setdesc "air" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
loop i 4 [
    setdesc [water@(? $i (+ $i 1))] "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
    setdesc [glass@(? $i (+ $i 1))] "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
    setdesc [lava@(? $i (+ $i 1))] "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
]
setdesc "clip" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "noclip" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "death" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "aiclip" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "ladder" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "alpha" "modifies the material properties for the selected cubes;^nwhere style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "checkmaps" "reports if clients are using a modified map"
setdesc "serverclients" "maximum number of allowed clients" "<value>"
setdesc "serverdesc" "server description" "<text>"
setdesc "servermotd" "server message of the day" "<text>"
setdesc "serveropen" "determines server openness for public use;^n0 = allow ^"setpriv 1^" and locked/private, 1 = allow ^"setpriv 1^" but no privileged mode, no locked/private, 2 = allow ^"setpriv 1^" but disallows private privileged mode (for public coop-editing), 3 = privilege only by moderator or admin" "<value>"
setdesc "autoadmin" "determines if authorities claim status by default" "<value>"
setdesc "airefresh" "delay imposed before the AI manager reorganises their setup" "<milliseconds>"
setdesc "modelockfilter" "determines the modes which are allowed to be used as dictated by modelock,^nconvenient to set using a sum of $modebit* vars (available: editing, deathmatch, capture, defend, bomber, trial),^nexample: (+ $modebitediting $modebitdeathmatch)" "<sum>"
setdesc "mutslockfilter" "determines the mutators which are allowed to be used as dictated by modelock,^nconvenient to set using a sum of $mutsbit* vars (available: multi, team, coop, instagib, medieval, ballistic, duel, survivor, arena, onslaught, jetpack, vampire, expert, resize, gsp1 = first mode variation {ctf-return, dtf-quick, bomber-hold}, gsp2 = second mode variation {ctf-defend, dtf-conquer}, gsp3 = third mode variation {ctf-protect, dtf-king-of-the-hill}),^nexample: (+ $mutsbitmulti $mutsbitteam)" "<sum>"
setdesc "gamespeed" "override gameplay speed" "<value>"
setdesc "gamepaused" "pauses the game, automatically unset by server" "<value>"
setdesc "defaultmap" "default map, ^"^" = random" "<map>"
setdesc "defaultmode" "default game mode;^n1 = editing, 2 = deathmatch, 3 = ctf, 4 = dtf, 5 = bomber, 6 = trial" "<value>"
setdesc "defaultmuts" "default mutators, convenient to set using a sum of $mutsbit* vars (available: multi, team, coop, instagib, medieval, ballistic, duel, survivor, arena, onslaught, jetpack, vampire, expert, resize, gsp1 = first mode variation {ctf-return, dtf-quick, bomber-hold}, gsp2 = second mode variation {ctf-defend, dtf-conquer}, gsp3 = third mode variation {ctf-protect, dtf-king-of-the-hill}" "<sum>"
setdesc "rotatemaps" "determines behaviour of map rotation;^n0 = off, 1 = sequence, 2 = random" "<value>"
setdesc "rotatemapsfilter" "0 = off, 1 = filter based on mutators, 2 = also filter based on players" "<value>"
setdesc "rotatemode" "determines if modes rotate when the server selects the next map" "<value>"
setdesc "allowmaps" "determines which maps are allowed to be chosen without elevated privileges" "<list>"
setdesc "mainmaps" "deathmatch maps" "<list>"
setdesc "capturemaps" "capture-the-flag maps" "<list>"
setdesc "defendmaps" "defend-the-flag maps" "<list>"
setdesc "bombermaps" "bomber-ball maps" "<list>"
setdesc "holdmaps" "hold bomber-ball maps" "<list>"
setdesc "trialmaps" "time-trial maps" "<list>"
setdesc "duelmaps" "duel map filter (extra filter on top of mode filter)" "<list>"
setdesc "jetpackmaps" "jetpack map filter (extra filter on top of mode filter)" "<list>"
setdesc "spawnweapon" "weapon players spawn with, defaults to pistol (1)" "<value>"
setdesc "instaweapon" "weapon players spawn with in instagib, defaults to rifle (7)" "<value>"
setdesc "trialweapon" "weapon players spawn with in trial, defaults to melee only (0)" "<value>"
setdesc "burntime" "time in milliseconds fire burns for, try to allow an extra 500ms breathing room for sync" "<milliseconds>"
setdesc "burndelay" "time in milliseconds for which fire burning deals damage" "<milliseconds>"
setdesc "burndamage" "amount of damage fire burning deals" "<value>"
setdesc "bleedtime" "time in milliseconds bleeding lasts for, try to allow an extra 500ms breathing room for sync" "<milliseconds>"
setdesc "bleeddelay" "time in milliseconds for which bleeding deals damage" "<value>"
setdesc "bleeddamage" "amount of damage bleeding deals" "<value>"
setdesc "triallimit" "time in milliseconds after the first player crosses the finishing line in a non-looping trial map players have to complete" "<milliseconds>"
setdesc "botskillmin" "minimum randomly assigned AI skill level" "<value>"
setdesc "botskillmax" "maximum randomly assigned AI skill level" "<value>"
setdesc "botscale" "scale the 'numplayers' world variable which determines bot auto population" "<value>"
setdesc "botlimit" "maximum number of bots allowed, regardless of any other variable/setting" "<value>"
setdesc "enemybalance" "multiply number of enemy spawns by this much" "<value>"
setdesc "gravityforce" "overrides world variable: gravity" "<value>"
setdesc "gravityscale" "multiply gravity by this much" "<value>"
setdesc "liquidspeedforce" "overrides world variable: liquidspeed" "<value>"
setdesc "liquidspeedscale" "multiply liquidspeed by this much" "<value>"
setdesc "liquidcoastforce" "overrides world variable: liquidcoast" "<value>"
setdesc "liquidcoastscale" "multiply liquidcoast by this much" "<value>"
setdesc "floorcoastforce" "overrides world variable: floorcoast" "<value>"
setdesc "floorcoastscale" "multiply floorcoast by this much" "<value>"
setdesc "aircoastforce" "overrides world variable: aircoast" "<value>"
setdesc "aircoastscale" "multiply aircoast by this much" "<value>"
setdesc "slidecoastforce" "overrides world variable: slidecoast" "<value>"
setdesc "slidecoastscale" "multiply slidecoast by this much" "<value>"
setdesc "stillspread" "multiply projectile spread by this much when standing still" "<value>"
setdesc "movespread" "multiply projectile spread by this much when moving" "<value>"
setdesc "inairspread" "multiply projectile spread by this much when jumping/in-air" "<value>"
setdesc "impulsespread" "multiply projectile spread by this much when impulsing/sprinting/jetpacking" "<value>"
setdesc "explodescale" "multiply explosion radius by this amount" "<value>"
setdesc "explodelimited" "multiply explosion radius by this amount in limited situations (eg. instagib)" "<value>"
setdesc "damagescale" "scale damage by this amount" "<value>"
setdesc "criticalchance" "offset of hits that do damage in which criticals can occur" "<value>"
setdesc "hitpushscale" "scale hit pushes by this amount" "<value>"
setdesc "hitslowscale" "multiply ^"slow target on hit^" by this amount" "<value>"
setdesc "deadpushscale" "scale hit pushes by this amount when it results in a frag" "<value>"
setdesc "wavepushscale" "scale of the hitpush force used in a wavepush" "<value>"
setdesc "kickpushscale" "multiply kick pushes from weapons by this much" "<value>"
setdesc "kickpushcrouch" "multiply kick pushes from weapons by this much when crouching" "<value>"
setdesc "kickpushsway" "multiply kick push effect on hud gun sway by this much" "<value>"
setdesc "kickpushzoom" "multiply kick pushes from weapons by this much when zoomed" "<value>"
setdesc "multikilldelay" "time in milliseconds multiple kills in a row must occur" "<value>"
setdesc "spreecount" "number of consecutive frags for each spree level" "<value>"
setdesc "dominatecount" "number of frags on a single player without revenge before it is considered domination" "<value>"
setdesc "firstpersonfov" "determines the size of the field of view in first person mode" "<angle>"
setdesc "fov" "determines the size of the field of view in first or third person mode, depending on the current camera mode" "<angle>"
setdesc "getclientcolour" "gets the colour of a player" "<clientnum>"
setdesc "getclientmodel" "gets the model number of a player" "<clientnum>"
setdesc "getmodelname" "gets the model name from a model number, the second argument determines which bits of the path to the model file is printed, defaults to 2;^n0 = path to model directory, 1 = path to model/hwep directory, name of model directory" "<modelnumber> <value>"
setdesc "newent" "create a new entity (available: light, mapmodel, playerstart, envmap, particles, sound, lightfx, sunlight, weapon, teleport, actor, trigger, pusher, affinity, checkpoint, dummy1, dummy2)" "<type> <properties...>"
setdesc "entset" "set type and properites of the currently selected entity" "<type> <properties...>"
setdesc "skylight" "set colour and brightness of a uniform downwards-facing lightsource spanning the whole sky" "<value>"
setdesc "ambient" "set colour and brightness of a uniform ambient light throughout the whole map" "<value>"
setdesc "entfind" "selects all entities of a specific type and optionally with specific properties, using ^"1^" as type selects all entities" "<type> <properties...>"
setdesc "entfindinsel" "selects all entities, within the selected area, of a specific type and optionally with specific properties, using ^"1^" as type selects all entities" "<type> <properties...>"
setdesc "entcancel" "deselects all entities while leaving area selected"
setdesc "edit" "starts editing on a new map file named ^"mapname.mpz^" or loads mapname.mpz if it already exists" "<map>"
setdesc "savemap" "saves the current map as ^"mapname.mpz^" in the homedir" "<map>"
setdesc "maptitle" "sets the title message of the map" "<text>"
setdesc "maptitle" "sets the author message of the map" "<text>"
setdesc "mapenlarge" "enlarges the map to twice the size" "<text>"
setdesc "shrinkmap" "shrinks the map size to smallest cubed area, only empty space outside of the map will be removed"
setdesc "sendmap" "manually sends map to the server"
setdesc "getmap" "manually retrieves map from the server"
setdesc "gettex" "picks up the texture from the face currently selected, note that allfaces must be turned off"
setdesc "vscale" "replaces selected textures with scaled versions, minimum is 0.125" "<value>"
setdesc "vrotate" "replaces selected textures with clockwise rotated or flipped versions;^n0 = default, 1-3 = rotate 90*this degrees, 4 = flipped left-to-right, 5 = flipped top-to-bottom" "<value>"
setdesc "vcolor" "replaces selected textures with colour-tinted versions,^ne.g. 1 0.2 0.2 will create red versions, default is 1 1 1" "<red> <green> <blue>"
setdesc "vpalette" "applies the colour specified by <set> and <id> from the builtin palette;^nset 0 = pulse colours {0 = turn off all palette effects, 1 = dark fire pulse colours, 2 = bright fire pulse colours, 3 = disco pulse colours (bomber-ball)},^nset 1 = team colours {0-3 = only enforced in teamplay games 4-7 = enforced at all times},^nset 2 = weapon colours {0-9 = only enforced when that weapon is able to spawn in the current game configuration 10-19 = enforced at all times}" "<set> <id>"
setdesc "vreset" "resets a vtexture to its original settings"
setdesc "replace" "repeats the last texture change across the entire map, note that allfaces must be turned off"
setdesc "vdelta" "adjusts parameters of textures;^nexample: vdelta vshaderparam specscale 0.2 0.2 1.1^nexample: vdelta voffset 0 +16" "<parameter> <properties...>"
setdesc "vshaderparam" "set shader parameters of textures, normally used with vdelta;^nspecscale <red> <green> <blue> = specularity colour and brightness of a texture {example: vdelta vshaderparam specscale 0.2 0.2 1.1 will make the texture shine blue, specscale 0.2 0.2 0.2 will remove the shine},^nparallaxscale <red> <green> <blue> = adjusts the 3d hightmap effect of a texture,^nglowcolor <red> <green> <blue> = adjusts the 3d glow colour of a texture" "<parameter> <properties>"
setdesc "texturecull" "removes all texures not used in the map from the map config file"
setdesc "setgrass" "designates the currently selected texture as a ^"grass texture^" throughout the wole map, and uses <file> as the vertical grass image, e.g textures/grass.png" "<file>"
setdesc "grasscolour" "sets the colour of grass" "<red> <green> <blue>"
setdesc "grassheight" "sets the height of grass" "<value>"
setdesc "grassblend" "sets the opacity of grass" "<value>"
setdesc "grassdist" "sets the distance at which grass becomes visible" "<value>"
setdesc "calclight" "create and apply lightmap for all textures"
setdesc "lightprecision" "set precision of lightmap, higher precision reduces quality and speeds up calclight"
setdesc "fullbright" "hides lightmap for all textures if enabled"
setdesc "selectbrush" "select a different brush with relative index to the current one;^n-1 = previous brush, 1 = next brush" "<index>"
setdesc "skybox" "loads a set of 6 images associated by name from the specified basepath;^ne.g. ^"skyboxes/gradient^" will load gradient_{up,dn,lf,rt,bk,ft}.{png,jpg}" "<basepath>"
setdesc "skycolour" "changes the colour of the skybox" "<red> <green> <blue>"
setdesc "yawsky" "determines the placement of the skybox (move the sun's placement)"
setdesc "spinsky" "controls the speed at which the skybox turns"
setdesc "cloudlayer" "loads a specified image to tile as a cloud layer" "<file>"
setdesc "cloudheight" "set cloud placement;^n-1 = bottom of the skybox, 1 = top of the skybox"
setdesc "cloudscale" "controls the scale of the cloud layer" "<value>"
setdesc "cloudscrollx" "controls the movement speed of the cloud layer on the x axis" "<value>"
setdesc "cloudscrolly" "controls the movement speed of the cloud layer on the y axis" "<value>"
setdesc "cloudlayercolour" "controls the colour of the cloud layer" "<red> <green> <blue>"
setdesc "cloudfade" "controls how the cloud layer fades around the edges" "<value>"
setdesc "dropwaypoints" "determines if waypoints are dropped by players in game, defaults to 1;^n0 = no waypoints are dropped, 1 = limited number of waypoints are dropped" "<value>"
setdesc "showwaypoints" "toggles the visibility of the path that connects waypoints, waypoints are always visible if they are being dropped" "<value>"
setdesc "savewaypoints" "saves a .wpt file containing the current maps waypoints, if no argument is given it uses the current map's name" "[<name>]"
setdesc "loadwaypoints" "loads a .wpt file containing waypoints, if no argument is given it loads a waypoint file matching the current map's name" "[<name>]"
setdesc "delselwaypoints" "delete the waypoints in the currently selected area"
setdesc "followaiming" "determines aim direction when following a player^n0 = don't aim, &1 = aim in thirdperson, &2 = aim in first person" "<value>"
setdesc "spectvaiming" "determines aim direction of spectv;^n0 = aim in direction followed player is facing, 1 = aim in direction determined by spectv when dead, 2 = always aim in direction" "<value>"
setdesc "prevmaps" "list of previously played maps"
setdesc "maphistory" "remember this many maps that can't be voted again if votelock is set" "<value>"
setdesc "intermmode" "determines camera style in intermission;^n0 = float, 1 = tv" "<value>"
setdesc "coopmultibalance" "multiply number of players in bot teams by this much"
setdesc "setpersist" "toggles an alias as persistent, that is, determines if it will be added to config.cfg;^n<bool>: 0 = not persistent, 1 = persistent" "<alias> <bool>"
setdesc "local" "declares a set of aliases as local to the alias (function) it was declared in"
setdesc "newgui" "creates a new menu;^n<name> refers to the menu's variable name,^n<content> refers to the actual content of the gui itself,^n[<initscript>] is optional, and is run before the menu is created (used with ^"if (= $guipasses 0)^" to initialize variables for the menu)" "<name> <content> [<initscript>]"
setdesc "guitext" "creates a text element;^n<text> can be a raw string or a variable,^n[<icon>] is the path to an image, example: ^"textures/bomb^",^n[<colour>] is a hexadecimal colour code, example: 0xFF0000" "<text> [<icon>] [<colour>]"
setdesc "guistrut" "adds spacing to a menu;^nif [<bool>] is 1, it wraps the guistrut in a guilist (adds spacing in the alternate direction),^n^"guistrut 5 1^" is the same as ^"guilist [ guistrut 5 ]^"" "<amount> [<bool>]"
setdesc "guilist" "adds <content> to a list" "<content>"
setdesc "guispring" "adds weight to a menu for pushing elements more/less to one side;^nexample: guistrut 45 1; guilist [ guispring 1; guitext ^"centered^"; guispring 1 ]" "<value>"
setdesc "guibutton" "creates a button;^n<name> refers to the button's variable name,^n<action> defines what the button does,^n[<alt-act>] defines what the button does when right-clicked,^n[<icon>] is the path to an image, example: ^"textures/bomb^",^n[<colour>] is a hexadecimal colour code, example: 0xFF0000" "<name> <action> [<alt-act>] [<icon>] [<colour>]"
setdesc "guicheckbox" "creates a checkbox;^n<name> refers to the name of the item,^n<varible> refers to the alias/var that the checkbox controls,^n[<on>] is the value given to <variable> when the checkbox is on, and vice-versa for [<off>], if these are not specified, 1/0 is assumed,^n[<onchange>] is the action taken whenever the checkbox is toggled,^n[<colour>] is a hexadecimal colour code, example: 0xFF0000" "<name> <var> [<on>] [<off>] [<onchange>] [<colour>]"
setdesc "guibackground" "creates a colored background;^n<colour> is in hexadecimal, example: 0xFF0000,^n[<levels>] specifies how many guilist levels to go back" "<colour> [<levels>]"
setdesc "guifield" "creates a text field;^n<var> refers to the alias/variable the guifield controls,^n<maxlength> defines the maximum number of characters/length of the field, negative values allow the field to expand downward as needed,^n[<onchange>] is the action taken when the guifield value changes,^n[<colour>] is a hexadecimal colour code, example: 0xFF0000" "<var> <maxlength> [<onchange>] [<colour>]"
setdesc "guikeyfield" "creates a key field (each key being a separate element);^n<var> refers to the alias/variable the guikeyfield controls,^n<maxlength> defines the maximum number of characters/length of the field, negative values allow the field to expand downward as needed,^n[<onchangge>] is the action taken when the guikeyfield value changes,^n[<colour>] is a hexadecimal colour code example: 0xFF0000" "<var> <maxlength> [<onchange>] [<colour>]"
setdesc "guifont" "sets the text font to be used in the block, see data/fonts for options" "<font> <block>"
setdesc "guiheader" "sets the header title of the menu" "<value>"
setdesc "guiimage" "creates an image;^n<path> is the path to an image, example: ^"textures/bomb^",^n[<action>] defines what clicking the image does,^n[<scale>] defines the scale of the image,^n[<overlaid>] whether or not the image is overlaid with guioverlaytex (true/false),^n[<alt-path>] alternate image to use if <path> cannot be loaded,^n[<alt-act>] defines what the image does when right clicked" "<path> [<action>] [<scale>] [<overlaid>] [<alt-path>] [<alt-act>]"
setdesc "guiradio" "creates a radio button;^n<name> refers to the name of the item,^n<var> refers to the alias/var that the checkbox controls,^n<value> is the value given to <var> when selected,^n[<onchange>] is the action taken whenever the checkbox is toggled,^n[<colour>] is a hexadecimal colour code, example: 0xFF0000" "<name> <var> <value> [<onchange>] [<colour>]"
setdesc "guitab" "creates a new tab for the menu" "<name>"
setdesc "guititle" "adds a title to a menu" "<value>"
setdesc "inputcommand" "prepares input to the command line;^n <init> is a string to input in the command line,^n[<action>] is optional and specifies a command to execute after inputcommand,^n[<icon>] is optional and determines the icon to use next to the input, example: ^"textures/bomb^",^n[<colour>] is optional and determines the color of <icon>,^n[<flags>] is optional and determines the command flags to pass, c = CF_COMPLETE, x = CF_EXECUTE, s = CF_COMPLETE|CF_EXECUTE (default)" "<init> [<action>] [<icon>] [<colour>] [<flags>]"
setdesc "loop" "executes <body> with <var> incremented from 0 to <count>-1;^nexample: loop i 10 [ echo $i ]" "<var> <count> <body>"
setdesc "loopconcat" "returns a string with the result of the <body> concatenated with <var> incremented from 0 to <count>-1;^nexample: loopconcat i 10 [ result $i ]" "<var> <count> <body>"
setdesc "loopconcatword" "returns a string with the result of the <body> concatword-ed with <var> incremented from 0 to <count>-1;^nexample: loopconcatword i 10 [ result $i ]" "<var> <count> <body>"
setdesc "loopfiles" "executes <body> with <var> set to each file in <directory> with the given <extension> (^"^" for extension is all files);^nexample: loopfiles f data cfg [ echo $f ]" "<var> <directory> <extension> <body>"
setdesc "looplist" "executes <body> with <var> set to each item in <list>;^nexample: looplist i ^"this is a list^" [ echo $i ]" "<var> <list> <body>"
setdesc "loopwhile" "executes <body> with <var> incremented from 0 to <count>-1 while <condition> is true;^nexample: loopwhile i 10 [ < $i 5 ] [ echo $i ]" "<var> <count> <condition> <body>"
setdesc "while" "executes <body> while <cond> is true;^nexample: i = 0; while [ < $i 10 ] [ echo $i; i = (+ $i 1) ]" "<cond> <body>"
setdesc "indexof" "returns the index in <list> of <data>;^nexample: indexof ^"this is a list^" list" "<list> <data>"
setdesc "listdel" "returns the <list1> with all occurrences of each element in <list2> removed, it is equivalent to set difference;^nexample: listdel ^"this list has duplicates^" ^"this duplicates^", will return ^"list has^"" "<list1> <list2>"
setdesc "listfind" "returns the index in <list> where the <body> returns true, similar to looplist;^nexample: listfind i ^"this is a list^" [ result (>= (strstr $i l) 0) ]" "<var> <list> <body>"
setdesc "listlen" "returns the length of the <list>;^nexample: listlen ^"this is a list^"" "<list>"
setdesc "listsplice" "returns a list where the elements between the <start> index and the end or for <count> elements is replaced with <value>;^nexample: listsplice ^"1 2 3 4 5 6^" insert 2 3" "<list> <value> <start> <count>"
setdesc "prettylist" "returns a recombined <list> with a comma placed between each list element and <conjunctor> placed between the last two elements (in addition to the comma);^nexample: prettylist ^"1 2 3 4^" and" "<list> <conjunctor>"
setdesc "shrinklist" "returns a list of all element that exists in both <list1> and <list2>;^nif there are no results and <failover> is 1 or 2, the list that failover points to is returned,^nwithout <failover>, shrinklist is equivalent to set symmetric difference;^nexample: shrinklist ^"this is a list^" ^"this is another list^", will return ^"this is list^"" "<list1> <list2> [<failover>]"
setdesc "sublist" "returns a sublist of <list> starting at <start> and ending at the end or for <count> elements;^nexample: sublist ^"this is a list^" 1 2" "<list> <start> [<count>]"
setdesc "&" "returns the bit-wise AND of <int1> and <int2>" "<int1> <int2>"
setdesc "&~" "returns the bit-wise NOT of the bit-wise AND of <int1> and <int2>" "<int1> <int2>"
setdesc "<<" "returns <int1> left shifted <int2> times" "<int1> <int2>"
setdesc ">>" "returns <int1> right shifted <int2> times" "<int1> <int2>"
setdesc "^^" "returns the bit-wise XOR of <int1> and <int2>" "<int1> <int2>"
setdesc "^^~" "returns the bit-wise NOT of the bit-wise XOR of <int1> and <int2>" "<int1> <int2>"
setdesc "|" "returns the bit-wise OR of <int1> and <int2>" "<int1> <int2>"
setdesc "|~" "returns the bit-wise NOT of the bit-wise OR of <int1> and <int2>" "<int1> <int2>"
setdesc "~" "returns the bit-wise NOT of <int>" "<int>"
setdesc "!" "returns the logical not of <condition>" "<condition>"
setdesc "&&" "returns the logical and of all given conditions" "<condition...>"
setdesc "?" "returns <true_body> when <condition> is true, otherwise <false_body>" "<condition> <true_body> <false_body>"
setdesc "||" "returns the logical or of all given conditions" "<condition...>"
setdesc "!=" "returns true when <int1> is not equal to <int2>" "<int1> <int2>"
setdesc "!=f" "returns true when <float1> is not equal to <float2>" "<float1> <float2>"
setdesc "!=s" "returns true when <string1> is not equal to <string2> on the ascii table" "<string1> <string2>"
setdesc "<=" "returns true when <int1> is less than or equal to <int2>" "<int1> <int2>"
setdesc "<=f" "returns true when <float1> is less than or equal to <float2>" "<float1> <float2>"
setdesc "<=s" "returns true when <string1> is less than or equal to <string2> on the ascii table" "<string1> <string2>"
setdesc "<" "returns true when <int1> is less than <int2>" "<int1> <int2>"
setdesc "<f" "returns true when <float1> is less than <float2>" "<float1> <float2>"
setdesc "<s" "returns true when <string1> is less than <string2> on the ascii table" "<string1> <string2>"
setdesc "=" "returns true when <int1> is equal to <int2>" "<int1> <int2>"
setdesc "=f" "returns true when <float1> is equal to <float2>" "<float1> <float2>"
setdesc "=s" "returns true when <string1> is equal to <string2> on the ascii table" "<string1> <string2>"
setdesc ">=" "returns true when <int1> is greater than or equal to <int2>" "<int1> <int2>"
setdesc ">=f" "returns true when <float1> is greater than or equal to <float2>" "<float1> <float2>"
setdesc ">=s" "returns true when <string1> is greater than or equal to <string2> on the ascii table" "<string1> <string2>"
setdesc ">" "returns true when <int1> is greater than <int2>" "<int1> <int2>"
setdesc ">f" "returns true when <float1> is greater than <float2>" "<float1> <float2>"
setdesc ">s" "returns true when <string1> is greater than <string2> on the ascii table" "<string1> <string2>"
setdesc "*" "returns all arguments multiplied together as integers" "<int...>"
setdesc "*f" "returns all arguments multiplied together as floats" "<float...>"
setdesc "+" "returns all arguments added together as integers" "<int...>"
setdesc "+f" "returns all arguments added together as floats" "<float...>"
setdesc "-" "returns all other arguments subtracted from the first argument as integers" "<int...>"
setdesc "-f" "returns all other arguments subtracted from the first argument as floats" "<float...>"
setdesc "div" "returns all other arguments divided from the first argument as integers" "<int...>"
setdesc "divf" "returns all other arguments divided from the first argument as floats" "<float...>"
setdesc "mod" "returns the modulus of <int1> and <int2> (that is, the remainder of <int1>/<int2>)" "<int1> <int2>"
setdesc "modf" "returns the modulus of <float1> and <float2> (that is, the remainder of <float1>/<float2>)" "<float1> <float2>"
setdesc "strcasecmp" "returns true when <string1> is equal to <string2> ignoring case;^nexample: strcasecmp ^"str^" ^"StR^"" "<string1> <string2>"
setdesc "strcmp" "returns true when <string1> is equal to <string2>, equivalent to =s;^nexample: strcmp ^"str^" ^"str^"" "<string1> <string2>"
setdesc "strlen" "returns the length of <string>;^nexample: strlen ^"four^"" "<string>"
setdesc "strncasecmp" "returns true when the first <count> characters of <string1> and <string2> are equal ignoring case;^nexample: strncasecmp ^"str^" ^"StRiNg^" 3" "<string1> <string2> <count>"
setdesc "strncmp" "returns true when the first <count> characters of <string1> and <string2> are equal;^nexample: strncmp ^"str^" ^"string^" 3" "<string1> <string2> <count>"
setdesc "strreplace" "returns <string> with all occurrences of <search> replaced with <replace>;^nexample: strreplace ^"misspelled sring^" ^"sring^" ^"string^"" "<string> <search> <replace>"
setdesc "strstr" "returns the index of <search> in <string>;^nexample: strstr ^"long string^" ^"str^"" "<string> <search>"
setdesc "substr" "returns a substring of <string> starting at <start> and continuing to the end or for <count> characters;^nexample: substr ^"string^" 2 3" "<string> <start> [<count>]"
setdesc "concat" "returns all <value>s concatenated with a space between each argument;^nexample: concat hello (getname)" "<value...>"
setdesc "concatword" "returns all <value>s concatenated without a space between each argument;^nexample: concatword squished string" "<value...>"
setdesc "clearsleep" "removes all pending sleeps, if <clearworlds> is set, it will only clear sleeps generated in a map's config file;^nexample: clearsleep" "[<clearworlds>]"
setdesc "do" "executes <body>;^nexample: do [ echo hi ]" "<body>"
setdesc "format" "returns a formatted string with all %1 - %9 replaced with the respective <value> argument, %% inserts a % sign;^nexample: format ^"Hello, %1, welcome to Red Eclipse v. %2^" (getname) $version" "<format_string> <value...>"
setdesc "if" "execute <true_body> when <condition> is true, otherwise executes <false_body>;^nexample: if (< $var 5) [ echo less than 5 ] [ echo greater than 5 ]" "<condition> <true_body> <false_body>"
setdesc "push" "pushes <value> into <var>'s stack and executes <body> then pops <value> off of <var> so that <var> is untouched after execution of <body>;^nexample: var = 5; push var 10 [ echo $var ]; echo $var" "<var> <value> <body>"
setdesc "result" "sets the return value for the currently executing code to <value>, note that this does not stop the code execution like return would;^nexample: result 1" "<value>"
setdesc "rnd" "returns a random number between 0 or <min> and <max>;^nexample: rnd 50 25" "<max> [<min>]"
setdesc "sleep" "executes <body> after waiting <milliseconds>;^nexample: sleep 2000 [ echo waited 2 seconds ]" "<milliseconds> <body>"

setdesc "at" "returns the element at <index> in <list>, subsequent indexes are at'd with the previous result;^nexample: at [this has a [nested list]] 3 1" "<list> <index> [<nested_index>...]"
setdesc "filter" "filters a string by stripping of any or all of the following: newlines, color, and whitespace, each of these values are boolean, and true by default if omitted;^n[<newlines>] - if true, replaces newline characters with spaces,^n[<color>] - if true, any color formatting will be removed,^n[<whitespace>] - if true, whitespace is kept; if false, whitespace is removed" "<string> [<newlines>] [<color>] [<whitespace>]"
setdesc "goto" "jumps the spectator camera to the position of the specified client" "<cn>"
setdesc "hexcolour" "converts a decimal color value to a ^"pretty-printed^" hexadecimal color value;^nexample: (hexcolour 342344) will give 0x093548" "<color>"
setdesc "precf" "returns the value <float> with <accuracy> number of decimals;^nexample: (precf (divf 2 14) 5) will give 0.14286" "<float> <accuracy>"
setdesc "writevars" "writes the current server's variables to a config file named <file>;^nif [<all>] is true, every variable will be written with default values commented out; if false, only changed variables will be written (default: false)^nif [<sv_>] is true, variables will be prefixed with ^"sv_^" (default: false)" "<file> [<all>] [<sv_>]"
setdesc "case"  "executes the first <body> where the corresponding <test_value> is equivalent to <integer> using integer comparison;^nfor the 'default' case (always true), use () for the <test_value>,^nexample: case (rnd 3) 0 [ echo 0 ] 1 [ echo 1 ] () [ echo default ]" "<integer> [<test_value> <body>] [<test_value> <body>] [...]"
setdesc "casef" "executes the first <body> where the corresponding <test_value> is equivalent to <float> using float comparison;^nfor the 'default' case (always true) use () for the <test_value>,^nexample: case (+f (rnd 3) .1) 0.1 [ echo 0.1 ] 1.1 [ echo 1.1 ] () [ echo default ]" "<float> [<test_value> <body>] [<test_value> <body>] [...]"
setdesc "cases" "executes the first <body> where the corresponding <test_value> is equivalent to <string> using string comparison;^nfor the 'default' case (always true) use () for the <test_value>,^nexample: case (substr ^"abc^" (rnd 3) 1) a [ echo a ] b [ echo b ] () [ echo default ]" "<string> [<test_value> <body>] [<test_value> <body>] [...]"
setdesc "cond"  "executes the first <body> where the corresponding <condition> is true;^nexample: i = (rnd 3); cond [ = $i 0 ] [ echo 0 ] [ = $i 1 ] [ echo 1 ] 1 [ echo default ]" "[<condition> <body>] [<condition> <body>] [...]"
setdesc "getvarmin" "returns the minimum value of <varname>, a built-in integer variable;^nexample: getvarmin firstpersonfov" "<varname>"
setdesc "getvarmax" "returns the maximum value of <varname>, a built-in integer variable;^nexample: getvarmax firstpersonfov" "<varname>"
setdesc "getfvarmin" "returns the minimum value of <varname>, a built-in float variable;^nexample: getfvarmin movespeed" "<varname>"
setdesc "getfvarmax" "returns the maximum value of <varname>, a built-in float variable;^nexample: getfvarmax movespeed" "<varname>"
setdesc "writevars" "writes changed variables to <filename>;^nif <all> is true all unchanged variables are included commented out (default: false),^nif <server> is true the server prefix sv_ is added to all variables (default: false),^nexample: writevars mygame.cfg 1 1" "<filename> <all> <server>"
setdesc "escape" "returns a quoted string with all newline, tab, form feed, ^^, and ^" characters converted to the cubescript escape sequence (^^n, ^^t, ^^f, ^^^^, ^^^");^nexample: escape [line1^^nline2]" "<text>"
setdesc "unescape" "returns a string with all cubescript escape sequences (^^n, ^^t, ^^f, ^^^^, ^^^") converted back into newline, tab, form feed, ^^, and ^" respectively;^nexample: unescape [line1^^^^nline2]" "<text>"
setdesc "max" "returns the maximum <integer> value;^nexample: max 1 3 -9" "<integer...>"
setdesc "maxf" "returns the maximum <float> value;^nexample: maxf 1.1, 2.9, -9.5" "<float...>"
setdesc "min" "returns the minimum <integer> value;^nexample: min 1 3 -9" "<integer...>"
setdesc "minf" "returns the minimum <float> value;^nexample: minf 1.1, 2.9, -9.5" "<float...>"
setdesc "precf" "returns <float> truncated to <n> decimal points;^nexample: precf 15.125 2" "<float> <n>"
setdesc "cos" "returns the cosine of <float>;^nexample: cos 3.1415" "<float>"
setdesc "sin" "returns the sine of <float>;^nexample: sin 3.1415" "<float>"
setdesc "tan" "returns the tangent of <float>;^nexample: tan 3.1415" "<float>"
setdesc "acos" "returns the arc-cosine of <float>;^nexample: acos 1" "<float>"
setdesc "asin" "returns the arc-sine of <float>;^nexample: asin 1" "<float>"
setdesc "atan" "returns the arc-tangent of <float>;^nexample: atan 1" "<float>"
setdesc "abs" "returns the absolute power of <integer>;^nexample: abs -5" "<integer>"
setdesc "absf" "returns the absolute power of <float>;^nexample: absf -8.5" "<float>"
setdesc "exp" "returns e (2.71828) raised to the <float> power;^nexample: exp 5.6" "<float>"
setdesc "pow" "returns <base> raised to the power of <exponent>;^nexample: pow 2.1 8.1" "<base> <exponent>"
setdesc "sqrt" "returns the square root of <float>;^nexample: sqrt 4" "<float>"
setdesc "log10" "return the logarithm of <float> with base 10;^nexample: log10 1000" "<float>"
setdesc "log2" "return the logarithm of <float> with base 2;^nexample: log2 8" "<float>"
setdesc "loge" "return the logarithm of <float> with base e;^nexample: loge 20.08" "<float>"
setdesc "sortlist" "returns a sorted list (quicksort) based on the result of <body> applied onto <list>;^n if <body> returns true the two elements <varname_1> and <varname_2> will be swapped, unchanged otherwise,^nexample: sortlist ^"cat ape bear boar^" a b [<s $a $b], will return ^"ape bear boar cat^" (<s is ascii-alphabetic comparison)" "<list> <varname_1> <varname_2> <body>"
setdesc "stripcolors" "returns the <string> without any colors;^nexample: stripcolors ^"^^frhello ^^f[6252287]^"" "<string>"

looplist w $weapname [
    setdesc (concatword $w add) "the amount added when picking up the weapon or reloading it" "<value>"
    setdesc (concatword $w max) "the maximum amount the clip of this weapon can hold, can never be higher than default" "<value>"
    setdesc (concatword $w rdelay) "the time it takes for the weapon to reload one 'add' unit" "<milliseconds>"
    setdesc (concatword $w reloads) "determines if this weapon can reload" "<bool>"
    setdesc (concatword $w zooms) "determines if the secondary action on this weapon zooms" "<bool>"
    setdesc (concatword $w allowed) "determines if this weapon type is allowed to spawn at all, 0 = off, 1 = all but insta/duel, 2 = all but insta, 3 = always" "<value>"
    setdesc (concatword $w laser) "determines if this weapon has a laser pointer which is projected to the point where the player is aiming" "<value>"
    setdesc (concatword $w frequency) "determines the multiplier of itemspawntime in which items of this type respawn in" "<value>"
    setdesc (concatword $w critmult) "determines the multiplier of damage when a critical hit is done (can be zero for off)" "<value>"
    setdesc (concatword $w critdist) "determines the distance at which the chance of a critical is multiplied linearly toward target" "<distance>"

    loop n 2 [
        m = (+ $n 1)
        setdesc (concatword $w sub $m) "the amount taken from the clip for each firing action, set to zero for unlimited ammo" "<value>"
        setdesc (concatword $w adelay $m) "the time it takes after each firing action for the weapon to be ready again" "<milliseconds>"
        setdesc (concatword $w damage $m) "the amount of damage a projectile from each firing action does" "<value>"
        setdesc (concatword $w speed $m) "the speed of a projectile from each firing action" "<value>"
        setdesc (concatword $w power $m) "when more than zero, determines that the weapon can be 'cooked' this long before firing" "<value>"
        setdesc (concatword $w time $m) "the maximum lifetime of a projectile for each firing action" "<milliseconds>"
        setdesc (concatword $w pdelay $m) "when more than zero, projectiles from this weapon will be delayed this long" "<milliseconds>"
        setdesc (concatword $w gdelay $m) "when more than zero, projectiles from this weapon will delay guided settings by this long" "<milliseconds>"
        setdesc (concatword $w edelay $m) "when more than zero, projectiles from this weapon will not be able to hurt its owner for this long" "<milliseconds>"
        setdesc (concatword $w explode $m) "determines the explosion radius for a particle of this firing action" "<value>"
        setdesc (concatword $w rays $m) "the amount of projectiles spawned from one shot of each firing action" "<value>"
        setdesc (concatword $w spread $m) "determines the amount a projectile from each firing action skews off-center" "<value>"
        setdesc (concatword $w zdiv $m) "when zero, keeps spread projectiles aligned horizontally, else divide the z axis this much" "<value>"
        setdesc (concatword $w aiskew $m) "determines 'added stupidity' for each weapon for AI counterparts" "<value>"
        setdesc (concatword $w flakweap $m) "when projectiles from this firing action are destroyed, create projectiles from this kind of weapon (+10 = alt fire for the weapon)" "<value>"
        setdesc (concatword $w flakdmg $m) "flak of this type deals this much damage" "<value>"
        setdesc (concatword $w flakrays $m) "when creating flak, create this many projectiles for it" "<value>"
        setdesc (concatword $w flaktime $m) "flak projectiles from this weapon last this long" "<milliseconds>"
        setdesc (concatword $w flakspeed $m) "flak projectiles from this weapon start with this much speed (may be influenced by flakspread/flakskew and flakrel)" "<value>"
        setdesc (concatword $w collide $m) "determines collision properties for a projectile from each firing action (bitwise OR);^nIMPACT_GEOM = 1, BOUNCE_GEOM = 2, IMPACT_PLAYER = 4, BOUNCE_PLAYER = 8, RADIAL_PLAYER = 16, COLLIDE_TRACE = 32, COLLIDE_OWNER = 64, COLLIDE_CONT = 128, COLLIDE_STICK = 256" "<sum>"
        setdesc (concatword $w extinguish $m) "determines if a projectile from each firing action is extinguished by water" "<value>"
        setdesc (concatword $w cooked $m) "determines cooking style for a projectile, 0 = off, 1 = scale size, 2 = shorten life (+1 no scale), 4 = lengthen life (+1 no scale)" "<value>"
        setdesc (concatword $w guided $m) "determines guided style for a projectile, 0 = off, 1 = follow crosshair direction, 2 = home crosshair target (+1 only first target), 4 = home projectile target (+1 only first target), 6 = direct toward first crosshair direction" "<value>"
        setdesc (concatword $w radial $m) "determines the time between ticks of ^"continuous^" radial damage, starts counting from first ^"radiation^"" "<milliseconds>"

        setdesc (concatword $w residual $m) "determines if a projectile from each firing action has a residual effect;^n0 = off, 1 = burns, 2 = bleeds" "<bool>"
        setdesc (concatword $w fullauto $m) "determines if each firing action is fully automatic (click-and-hold) or not (click-and-click)" "<bool>"
        setdesc (concatword $w critdash $m) "when more than zero, this weapon will always deal a critical hit this long after an impulse dash" "<value>"
        setdesc (concatword $w taperin $m) "determines the fraction of the lifetime from the start until the projectile reaches its full size" "<value>"
        setdesc (concatword $w taperout $m) "determines the fraction of the lifetime from the end where the projectile size ^"fades out^"" "<value>"
        setdesc (concatword $w elasticity $m) "multiplier of velocity for a projectile of each firing action when doing a bounce event" "<value>"
        setdesc (concatword $w reflectivity $m) "guard angle for a projectile of each firing action when doing a bounce event" "<angle>"
        setdesc (concatword $w relativity $m) "multiplier of player velocity added to a projectile of each firing action" "<value>"
        setdesc (concatword $w waterfric $m) "multiplier of velocity for a projectile of each firing action when in water" "<value>"
        setdesc (concatword $w weight $m) "relative weight for a projectile of each firing action" "<value>"
        setdesc (concatword $w radius $m) "determines the size for a projectile of each firing action" "<value>"
        setdesc (concatword $w kickpush $m) "determines the amount of pushback from shooting each firing action" "<value>"
        setdesc (concatword $w hitpush $m) "multiplier of damage for a projectile or explosion of each firing action impacting a player" "<value>"
        setdesc (concatword $w slow $m) "slow target hit with a projectile from this by this ammount" "<value>"
        setdesc (concatword $w aidist $m) "determines the 'maximum distance' a weapon can be shot at, used by AI to determine weapon effectiveness ranges" "<distance>"
        setdesc (concatword $w partsize $m) "determines the maximum particle size of a projectile from each firing action" "<value>"
        setdesc (concatword $w partlen $m) "determines the maximum tape particle length of a projectile from each firing action" "<value>"
        setdesc (concatword $w delta $m) "determines the amount by which each firing action is guided" "<value>"
        setdesc (concatword $w trace $m) "determines the multiplier of length to apply to traced weapons" "<value>"
        setdesc (concatword $w torsodmg $m) "determines the multiplier of damage for torso shots" "<value>"
        setdesc (concatword $w legsdmg $m) "determines the multiplier of damage for leg shots" "<value>"
        setdesc (concatword $w flakscale $m) "flak created by this firing action is scaled by this much" "<value>"
        setdesc (concatword $w flakspread $m) "flak created by this firing action spreads its direction randomly by this much if it doesn't impact a player" "<value>"
        setdesc (concatword $w flakrel $m) "flak created by this firing action retains this much of its parent relative momentum" "<value>"
        setdesc (concatword $w flakffwd $m) "flak created by this firing action fast-forwards its lifecycle by this multiplier" "<value>"
        setdesc (concatword $w flakoffset $m) "flak created by this firing action is offset by this distance if it impacts a player before being created" "<value>"
        setdesc (concatword $w flakskew $m) "flak created by this firing action spreads its direction randomly by this much when it impacts a player" "<value>"
        setdesc (concatword $w wavepush $m) "determines the multiplier of explode radius this weapon pushes in" "<value>"
    ]
]
