// sets descriptions for commands/variables/etc
// usage: setdesc <id> <description> [usage]
setdesc "kick" "kicks a player from the server" "<clientnum>"
setdesc "allow" "sets a ban exemption for a player on the server" "<clientnum>"
setdesc "ban" "bans a player from the server" "<clientnum>"
setdesc "mute" "mutes a player on the server" "<clientnum>"
setdesc "limit" "limits team changing for a player on the server" "<clientnum>"
setdesc "quit" "quits the game"
setdesc "version" "game version for scripts" "<version>"
setdesc "kidmode" "enables or disables kid mode, which reduces blood and death effects somewhat. 1 enables reduced gore, defaults to 0" "<value>"
setdesc "servertype" "type of server, 1 = private (does not register with masterserver), 2 = public, 3 = dedicated" "<value>"
setdesc "hasoctapaks" "mega hack; try to find Cube 2, done after our own data so as to not clobber stuff" "<value>"
setdesc "autosavebackups" "make backups; 0 = off, 1 = single backup, 2 = named backup, 3/4 = same as 1/2 with move to ^"backups/^"" "<value>"
setdesc "autoreloading" "0 = never, 1 = when empty, 2 = weapons that don't add a full clip, 3 = always (+1 zooming weaps too)" "<value>"
setdesc "skipspawnweapon" "skip spawnweapon; 0 = never, 1 = if numweaps > 1 (+1), 3 = if carry > 0 (+2), 6 = always" "<value>"
setdesc "skipmelee" "skip melee; 0 = never, 1 = if numweaps > 1 (+2), 4 = if carry > 0 (+2), 7 = if carry > 0 and is offset (+2), 10 = always" "<value>"
setdesc "skippistol" "skip pistol; 0 = never, 1 = if numweaps > 1 (+2), 4 = if carry > 0 (+2), 7 = if carry > 0 and is offset (+2), 10 = always" "<value>"
setdesc "skipgrenade" "skip grenade; 0 = never, 1 = if numweaps > 1 (+2), 4 = if carry > 0 (+2), 7 = if carry > 0 and is offset (+2), 10 = always" "<value>"
setdesc "weapselectslot" "0 = by id, 1 = by slot" "<value>"
setdesc "showaiinfo" "0/1 = shows/hides bot join/parts, 2 = show more verbose info" "<value>"
setdesc "demolock" "determines who may record demos; 0 = helper, 1 = moderator, 2 = administrator, 3 = nobody" "<value>"
setdesc "maxdemos" "determines the maximum amount of demo files that may be saved simultaneously on the server (deletes old demos if exceeded)" "<value>"
setdesc "maxdemosize" "determines the maximum size of individual demo files that may be saved on the server" "<kilobytes>"
setdesc "speclock" "determines who may force players to spectate;  0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "kicklock" "determines who may kick players; 0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "allowlock" "determines who may allow players; 0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "banlock" "determines who may ban players; 0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "mutelock" "determines who may mute players; 0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "limitlock" "determines who may limit players; 0 = helper, 1 = moderator, 2 = admin, 3 = nobody" "<value>"
setdesc "floodlock" "0 = no flood lock, 1 = lock below helper, 2 = lock below moderator, 3 = lock below administrator, 4 = lock everyone" "<value>"
setdesc "floodmute" "automatically mute player when warned this many times" "<value>"
setdesc "floodtime" "time span to check for floody messages" "<value>"
setdesc "floodlines" "number of lines in aforementioned span before too many" "<value>"
setdesc "autospectate" "auto spectate if idle, 1 = auto spectate when remaining dead for autospecdelay" "<value>"
setdesc "resetallowsonend" "determines when the allow list is reset; 0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetbansonend" "determines when the ban list is reset; 0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetmutesonend" "determines when the mute list is reset; 0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetlimitsonend" "determines when the limit list is reset; 0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetvarsonend" "determines when these game variables are reset; 0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "resetmmonend" "determines when privilege mode changes are reset; 0 = off, 1 = just when empty, 2 = when matches end" "<value>"
setdesc "gamespeedlock" "determines if gamespeed is locked (also limited by varslock); 0 = off, 1 = helper, 2 = moderator, 3 = admin, 4 = nobody" "<value>"
setdesc "rotatemodefilter" "determines the modes which can be selected when the server selects the next map, convenient to set using a sum of $modebit* vars (available: editing, deathmatch, capture, defend, bomber, trial) example: (+ $modebitediting $modebitdeathmatch)" "<sum>"
setdesc "rotatemuts" "determines if mutators rotate when the server selects the next map (more than 1 decreases chances)" "<value>"
setdesc "rotatemutsfilter" "determines the mutators which can be selected when the server selects the next map, convenient to set using a sum of $mutsbit* vars (available: multi, team, coop, instagib, medieval, ballistic, duel, survivor, arena, onslaught, jetpack, vampire, expert, resize, gsp1 = first mode variation {ctf-return, dtf-quick, bomber-hold}, gsp2 = second mode variation {ctf-defend, dtf-conquer}, gsp3 = third mode variation {ctf-protect, dtf-king-of-the-hill} example: (+ $mutsbitmulti $mutsbitteam)" "<sum>"
setdesc "kingmaps" "king-of-the-hill maps" "<list>"
setdesc "multimaps" "maps allowed for modes which *require* multi spawns (ctf/bb)" "<list>"
setdesc "modelock" "determines if modes are locked; 0 = off, 1-3 = helper/moderator/admin only, 4-6 = helper/moderator/admin can only set limited mode and  higher, 7 = no mode selection" "<value>"
setdesc "mapsfilter" "0 = off, 1 = filter based on mutators, 2 = also filter based on players" "<value>"
setdesc "mapslock" "determines if maps are locked; 0 = off, 1-3 = helper/moderator/admin can select non-allow maps, 4-6 = helper/moderator/admin can select non-rotation maps, 7 = no map selection" "<value>"
setdesc "varslock" "determines if vars are locked; 0 = off, 1 = helper, 2 = moderator, 3 = admin, 4 = nobody" "<value>"
setdesc "votelock" "determines if votes are locked; 0 = off, 1-3 = helper/moderator/admin can select same game, 4 = helper/moderator/admin only can vote, 7 = no voting" "<value>"
setdesc "votewait" "time in milliseconds before a player may cast another vote (to avoid flooding)" "<milliseconds>"
setdesc "votestyle" "determines how mid-match votes are handled; 0 = votes don't pass mid-match, 1 = passes if votethreshold is met, 2 = passes if unanimous" "<milliseconds>"
setdesc "votethreshold" "auto-pass votes when this many agree" "<value>"
setdesc "voteinterm" "0 = must wait entire time, 1 = passes if votethreshold is met, 2 = passes if unanimous" "<value>"
setdesc "smallmapmax" "maximum number of players for a small map" "<value>"
setdesc "mediummapmax" "maximum number of players for a medium map" "<value>"
setdesc "maxalive" "only allow this*numplayers (for current map) to be alive at once" "<value>"
setdesc "maxalivequeue" "toggle queue system (used if number of players exceeds maxalive*numplayers for current map); 0 = prohibits leaving spectator, 1 = players enter queue" "<value>"
setdesc "maxaliveminimum" "only enables maxalive limit if the number of players is more than or equal to this" "<value>"
setdesc "maxalivethreshold" "only enables maxalive limit if the number of players is more than or equal to this*numplayers (for current map)" "<value>"
setdesc "spawnrotate" "spawn point rotation; 0 = let client decide, 1 = sequence, 2 = random" "<value>"
setdesc "spawngrenades" "spawn with grenades; 0 = never, 1 = all but instagib/time-trial, 2 = always" "<value>"
setdesc "spawndelay" "time in milliseconds before players can respawn in most modes" "<millisecond>"
setdesc "instadelay" "time in milliseconds before players can respawn in instagib mutated modes" "<milliseconds>"
setdesc "trialdelay" "time in milliseconds before players can respawn in trial mode" "<milliseconds>"
setdesc "bomberdelay" "delay before spawning in bomber" "<millisecond>"
setdesc "spawnprotect" "time in milliseconds after spawning players cannot be damaged" "<milliseconds>"
setdesc "duelprotect" "time in milliseconds after spawning players cannot be damaged in duel/survivor matches" "<milliseconds>"
setdesc "instaprotect" "time in milliseconds after spawning players cannot be damaged in instagib matches" "<milliseconds>"
setdesc "instaresizeamt" "each kill adds this much size in insta-resize" "<value>"
setdesc "regendelay" "time in milliseconds after being damage before normal regeneration resumes" "<milliseconds>"
setdesc "regentime" "time in milliseconds for which regenerate gives health" "<milliseconds>"
setdesc "regenhealth" "amount of health regneration gives" "<value>"
setdesc "regendecay" "if over maxhealth, decay this amount each regen" "<value>"
setdesc "kamikaze" "determines the level of kamikaze events; 0 = never, 1 = holding grenade, 2 = have grenade, 3 = always" "<value>"
setdesc "itemsallowed" "determines if items are present in the level; 0 = never, 1 = all but instagib, 2 = always" "<value>"
setdesc "itemspawntime" "time in milliseconds before items (re)spawn" "<milliseconds>"
setdesc "itemspawndelay" "time in milliseconds after map start items first spawn" "<milliseconds>"
setdesc "itemspawnstyle" "determines the timing of item spawning at map start; 0 = all at once, 1 = staggered, 2 = random, 3 = randomise between both" "<value>"
setdesc "itemthreshold" "if numitems/(players*maxcarry) is less than this, spawn one of this type" "<value>"
setdesc "timelimit" "time in minutes before round ends; 0 = off" "<minutes>"
setdesc "overtimeallow" "if scores are equal, go into overtime" "<value>"
setdesc "overtimelimit" "maximum time overtime may last, 0 = forever" "<minutes>"
setdesc "intermlimit" "time in milliseconds intermission lasts" "<milliseconds>"
setdesc "votelimit" "time in milliseconds intermission voting lasts" "<milliseconds>"
setdesc "duelreset" "reset winner in duel" "<value>"
setdesc "duelclear" "determines if items are reset at the end of each round" "<value>"
setdesc "duellimit" "time in milliseconds before next round in duel/survivor" "<milliseconds>"
setdesc "duelcycle" "determines if players are force-cycled after a certain number of wins (bit: 0 = off, 1 = non-team games, 2 = team games)" "<value>"
setdesc "duelcycles" "maximum wins in a row before force-cycling (0 = num team/total players)" "<value>"
setdesc "selfdamage" "determines if the player can damage themselves; 0 = off, 1 = either hurt self or use teamdamage rules" "<value>"
setdesc "trialstyle" "0 = all players are ghosts, 1 = all players are solid, but can't deal damage, 2 = regular gameplay style, solid+damage" "<value>"
setdesc "teamdamage" "determines if the player can damage team members; 0 = off, 1 = non-bots damage team, 2 = all players damage team" "<value>"
setdesc "teambalance" "determines the method of team balancing; 0 = off, 1 = by number then rank, 2 = by rank then number" "<value>"
setdesc "teampersist" "0 = off, 1 = only attempt, 2 = forced" "<value>"
setdesc "pointlimit" "number of points required to end the round (and win) in deathmatch modes" "<value>"
setdesc "capturelimit" "number of captures required to end the round (and win) in ctf" "<value>"
setdesc "capturepoints" "points added to score" "<value>"
setdesc "capturepickuppoints" "points added to score" "<value>"
setdesc "capturethreshold" "if someone 'warps' more than this distance, auto-drop" "<distance>"
setdesc "capturebuffing" "buffed; 0 = off, &1 = when guarding/secured, &2 = when carrying enemy, &4 = also defending secured, &8 = also defending enemy carrier" "<value>"
setdesc "capturebuffdelay" "buffed when guarding, and for this long after" "<milliseconds>"
setdesc "capturebuffarea" "multiply affinity radius by this much for buff" "<value>"
setdesc "capturebuffdamage" "multiply outgoing damage by this much when buffed" "<value>"
setdesc "capturebuffshield" "divide incoming damage by this much when buffed" "<value>"
setdesc "captureregenbuff" "0 = off, 1 = modify regeneration when buffed" "<value>"
setdesc "captureregendelay" "regen this often when buffed" "<milliseconds>"
setdesc "captureregenextra" "add this to regen when buffed" "<value>"
setdesc "defendlimit" "determines the style of dtf play; number of points required to end the round (and win) in dtf" "<value>"
setdesc "defendpoints" "number of points given in dtf" "<value>"
setdesc "defendoccupy" "points needed to occupy in regular games" "<value>"
setdesc "defendking" "points needed to occupy in king-of-the-hill" "<value>"
setdesc "defendflags" "flags to init and how; 0 = init all (neutral), 1 = init neutral and team only, 2 = init team only, 3 = init all (team + neutral + converted)" "<value>"
setdesc "defendbuffing" "buffed; 0 = off, &1 = when guarding, &2 = when securing, &4 = even when enemies are present" "<value>"
setdesc "defendbuffoccupy" "for defendbuffing&4, must be occupied this much before passing" "<milliseconds>"
setdesc "defendbuffdelay" "buffed for this long after leaving" "<milliseconds>"
setdesc "defendbuffarea" "multiply affinity radius by this much for buff" "<value>"
setdesc "defendbuffdamage" "multiply outgoing damage by this much when buffed" "<value>"
setdesc "defendbuffshield" "divide incoming damage by this much when buffed" "<value>"
setdesc "defendregenbuff" "0 = off, 1 = modify regeneration when buffed" "<value>"
setdesc "defendregendelay" "regen this often when buffed" "<milliseconds>"
setdesc "defendregenextra" "add this to regen when buffed" "<value>"
setdesc "bomberlimit" "finish when score is this or more (non-hold)" "<milliseconds>"
setdesc "bomberholdlimit" "finish when score is this or more (hold)" "<value>"
setdesc "bomberpoints" "points added to score" "<value>"
setdesc "bomberpenalty" "points taken from score" "<value>"
setdesc "bomberpickuppoints" "points added to score" "<value>"
setdesc "bomberholdpoints" "points added to score" "<value>"
setdesc "bomberholdpenalty" "penalty for holding too long" "<value>"
setdesc "bomberreset" "0 = off, 1 = kill winners, 2 = kill everyone" "<value>"
setdesc "bomberthreshold" "if someone 'warps' more than this distance, auto-drop" "<distance>"
setdesc "bomberbuffing" "buffed; 0 = off, &1 = when guarding, &2 = when securing" "<value>"
setdesc "bomberbuffdelay" "buffed for this long after leaving" "<milliseconds>"
setdesc "bomberbuffarea" "multiply affinity radius by this much for buff" "<value>"
setdesc "bomberbuffdamage" "multiply outgoing damage by this much when buffed" "<value>"
setdesc "bomberbuffshield" "divide incoming damage by this much when buffed" "<value>"
setdesc "bomberregenbuff" "0 = off, 1 = modify regeneration when buffed" "<value>"
setdesc "bomberregendelay" "regen this often when buffed" "<milliseconds>"
setdesc "bomberregenextra" "add this to regen when buffed" "<value>"
setdesc "bomberbasket" "you can score by throwing the bomb into the goal" "<value>"
setdesc "botbalance" "determines bot balancing method; -1 = always use numplayers, 0 = don't balance, 1 or more = fill only with this*numteams" "<value>"
setdesc "enemyspawntime" "determine length of time before enemies respawn" "<milliseconds>"
setdesc "enemyspawndelay" "determine length of time after map start enemies first spawn" "<milliseconds>"
setdesc "enemyspawnstyle" "determines enemy spawning style, 0 = all at once, 1 = staggered, 2 = random, 3 = randomise between both" "<value>"
setdesc "enemystrength" "scale enemy health values by this much" "<value>"
setdesc "movespeed" "baseline movement speed" "<value>"
setdesc "movecrawl" "multiplier of speed when crawling" "<value>"
setdesc "movesprint" "multiplier of speed when sprinting" "<value>"
setdesc "movejet" "multiplier of speed when using jetpack" "<value>"
setdesc "movestraight" "multiplier of speed when only moving forward" "<value>"
setdesc "movestrafe" "multiplier of speed when strafing" "<value>"
setdesc "moveinair" "multiplier of speed when in-air" "<value>"
setdesc "movestepup" "multiplier of speed when stepping up" "<value>"
setdesc "movestepdown" "multiplier of speed when stepping down" "<value>"
setdesc "jetdelay" "minimum time between jetpack" "<milliseconds>"
setdesc "jetheight" "jetpack maximum height off ground" "<value>"
setdesc "jetdecay" "decay rate of one unit per this many ms" "<value>"
setdesc "jumpspeed" "extra velocity to add when jumping" "<value>"
setdesc "impulsespeed" "extra velocity to add when impulsing" "<value>"
setdesc "impulselimit" "maximum impulse speed" "<value>"
setdesc "impulseboost" "multiplier of impulse when just boosting" "<value>"
setdesc "impulsepower" "power jump modifier" "<value>"
setdesc "impulsedash" "multiplier of impulse when dashing" "<value>"
setdesc "impulsejump" "multiplier of impulse when jumping" "<value>"
setdesc "impulseparkour" "multiplier of impulse when doing other parkour" "<value>"
setdesc "impulseparkourkick" "parkour kick modifier" "<value>"
setdesc "impulseparkourvault" "parkour vault modifier" "<value>"
setdesc "impulseparkournorm" "minimum parkour surface z normal" "<value>"
setdesc "impulseallowed" "determines which impulse actions are allowed (bitwise OR); 0 = off, 1 = dash, 2 = boost, 4 = sprint, 8 = parkour" "<sum>"
setdesc "impulsestyle" "impulse style; 0 = off, 1 = touch and count, 2 = count only, 3 = freestyle" "<value>"
setdesc "impulsecount" "number of impulse actions per air transit" "<value>"
setdesc "impulseslip" "time before floor friction kicks back in" "<milliseconds>"
setdesc "impulseslide" "time before powerslides end" "<milliseconds>"
setdesc "impulsedelay" "minimum time between boosts" "<milliseconds>"
setdesc "impulsedashdelay" "minimum time between dashes/powerslides" "<milliseconds>"
setdesc "impulsekickdelay" "minimum time between wall kicks/climbs" "<milliseconds>"
setdesc "impulsevaultmin" "minimum percentage of height for vault" "<value>"
setdesc "impulsevaultmax" "maximum percentage of height for vault" "<value>"
setdesc "impulsemelee" "multiplier of impulse when using melee" "<value>"
setdesc "impulsemeleechain" "impulse melee style; 0 = any time, 1+ = only this long after an impulse in ms" "<value>"
setdesc "impulsemeter" "impulse dash length; 0 = unlimited, anything else = timer" "<value>"
setdesc "impulsecost" "cost of impulse jump" "<value>"
setdesc "impulseskate" "length of time a run along a wall can last" "<value>"
setdesc "impulsesprint" "sprinting counts toward impulse; 0 = off, anything else = multiplier of time" "<value>"
setdesc "impulsejet" "jetpack impulse meter depletion" "<value>"
setdesc "impulseregen" "impulse regen multiplier" "<value>"
setdesc "impulseregencrouch" "impulse regen modifier when crouching" "<value>"
setdesc "impulseregensprint" "impulse regen modifier when sprinting" "<value>"
setdesc "impulseregenjet" "impulse regen jetpack modifier" "<value>"
setdesc "impulseregenmove" "impulse regen modifier when moving" "<value>"
setdesc "impulseregeninair" "impulse regen modifier when in air" "<value>"
setdesc "impulseregendelay" "delay before impulse regens" "<value>"
setdesc "impulseregenjetdelay" "delay before impulse regens after jetting, -1 = must touch ground" "<value>"
setdesc "zoomlock" "0 = unrestricted, 1 = must be on floor, 2 = also must not be moving, 3 = also must be on flat floor, 4 = must also be crouched" "<value>"
setdesc "zoomlocktime" "time before zoomlock kicks in when in the air" "<milliseconds>"
setdesc "weaponjamming" "0 = off, 1 = drop the weapon, 2 = drop all weapons, 3/4 = 1/2 + explode" "<value>"
setdesc "autoshowscores" "1 = when dead, 2 = also in spectv, 3 = and in waittv too" "<value>"
setdesc "showscoresdelay" "otherwise use respawn delay" "<milliseconds>"
setdesc "showlaptimes" "0 = off, 1 = only player, 2 = +humans, 3 = +bots" "<value>"
setdesc "muzzleflash" "0 = off, 1 = only other players, 2 = only thirdperson, 3 = all" "<value>"
setdesc "muzzleflare" "0 = off, 1 = only other players, 2 = only thirdperson, 3 = all" "<value>"
setdesc "underlaydisplay" "0 = only firstperson and alive, 1 = only when alive, 2 = always" "<value>"
setdesc "overlaydisplay" "0 = only firstperson and alive, 1 = only when alive, 2 = always" "<value>"
setdesc "showdamage" "1 shows just damage texture, 2 blends as well" "<value>"
setdesc "showcrosshair" "0 = off, 1 = on, 2 = blend depending on current accuracy level" "<value>"
setdesc "crosshairweapons" "0 = off, 1 = crosshair-specific weapons, 2 = also appy colour" "<value>"
setdesc "cursorstyle" "0 = top left tracking, 1 = center" "<value>"
setdesc "inventorybgskew" "skew items inside by this much" "<value>"
setdesc "inventorybgspace" "for aligning diagonals" "<value>"
setdesc "inventoryhealth" "0 = off, 1 = text, 2 = bar, 3 = bar + text" "<value>"
setdesc "inventoryhealthbartop" "starts from this offset" "<value>"
setdesc "inventoryhealthbarbottom" "ends at this offset" "<value>"
setdesc "inventoryimpulsebartop" "starts from this offset" "<value>"
setdesc "inventoryimpulsebarbottom" "ends at this offset" "<value>"
setdesc "inventorystatus" "0 = off, 1 = text, 2 = icon, 3 = icon + tex" "<value>"
setdesc "radarstyle" "0 = compass-sectional, 1 = compass-distance, 2 = screen-space, 3 = right-corner-positional" "<value>"
setdesc "radaraspect" "0 = off, else = (for radarstyle 0/1) radar forms an ellipse" "<value>"
setdesc "radardist" "0 = use world size" "<value>"
setdesc "radarcornerdist" "0 = use world size" "<value>"
setdesc "radarplayerfilter" "0 = off, 1 = non-team, 2 = team, 3 = only in duel/survivor/edit" "<value>"
setdesc "radardamage" "0 = off, 1 = basic damage, 2 = with killer announce (+1 killer track, +2 and bots), 5 = verbose" "<value>"
setdesc "editradarstyle" "0 = compass-sectional, 1 = compass-distance, 2 = screen-space, 3 = right-corner-positional" "<value>"
setdesc "editradardist" "0 = use world size" "<value>"
setdesc "motionblurfx" "0 = off, 1 = on, 2 = override" "<value>"
setdesc "motionblurmin" "minimum" "<value>"
setdesc "motionblurmax" "maximum" "<value>"
setdesc "motionbluramt" "used for override" "<value>"
setdesc "musictype" "0 = no in-game music, 1 = map music (or random if none), 2 = always random, 3 = map music (silence if none), 4-5 = same as 1-2 but pick new tracks when done" "<value>"
setdesc "musicedit" "0 = no editing music, 1 = map music (or random if none), 2 = always random, 3 = map music (silence if none), 4-5 = same as 1-2 but pick new tracks when done" "<value>"
setdesc "followdead" "0 = never, 1 = in all but duel/survivor, 2 = always" "<value>"
setdesc "specmode" "0 = float, 1 = tv" "<value>"
setdesc "waitmode" "0 = float, 1 = tv in duel/survivor, 2 = tv always" "<value>"
setdesc "spectvrotate" "rotate style, < 0 = absolute angle, 0 = scaled, > 0 = scaled with max angle" "<value>"
setdesc "spectvdead" "0 = never, 1 = in all but duel/survivor, 2 = always" "<value>"
setdesc "deathcamstyle" "0 = no follow, 1 = follow attacker, 2 = follow self" "<value>"
setdesc "zoomdefault" "0 = last used, else defines default level" "<value>"
setdesc "zoomscroll" "0 = stop at min/max, 1 = go to opposite end" "<value>"
setdesc "showobituaries" "0 = off, 1 = only me, 2 = 1 + announcements, 3 = 2 + but dying bots, 4 = 3 + but bot vs bot, 5 = all" "<value>"
setdesc "obitannounce" "0 = off, 1 = only focus, 2 = everyone" "<value>"
setdesc "showpresence" "0 = never show join/leave, 1 = show only during game, 2 = show when connecting/disconnecting" "<value>"
setdesc "showteamchange" "0 = never show, 1 = show only when switching between, 2 = show when entering match too" "<value>"
setdesc "deathanim" "0 = hide player when dead, 1 = old death animation, 2 = ragdolls" "<value>"
setdesc "deathfade" "0 = don't fade out dead players, 1 = fade them out" "<value>"
setdesc "deathscale" "0 = don't scale out dead players, 1 = scale them out" "<value>"
setdesc "autoloadweap" "0 = off, 1 = auto-set loadout weapons" "<value>"
setdesc "gravity" "gravity" "<value>"
setdesc "impulsekick" "determines the minimum angle to switch between wall kick and run" "<angle>"
setdesc "impulsemethod" "determines which impulse method to use, 0 = none, 1 = power jump, 2 = power slide, 3 = both" "<value>"
setdesc "impulseaction" "determines how impulse action works, 0 = off, 1 = impulse jump, 2 = impulse dash, 3 = both" "<value>"
setdesc "impulseroll" "determines the camera angle tilt when wallrunning" "<angle>"
setdesc "dashstyle" "0 = only with impulse, 1 = double tap" "<value>"
setdesc "crouchstyle" "0 = press and hold, 1 = double-tap toggle, 2 = toggle" "<value>"
setdesc "sprintstyle" "0 = press and hold, 1 = double-tap toggle, 2 = toggle, 3-5 = same, but auto engage if impulsesprint == 0" "<value>"
setdesc "showentdir" "0 = off, 1 = only selected, 2 = always when editing, 3 = always in editmode" "<value>"
setdesc "aboveheadblend" "determines the opacity of all abovehead* vars" "<value>"
setdesc "aboveheaddamage" "shows amount of damage done to a player above their head" "<value>"
setdesc "aboveheadeventsize" "determines the size of event icons above players' heads" "<value>"
setdesc "aboveheadicons" "detemines what type of actions displays icons above player (bitwise OR for affinities and weapons); 0 = none, 1+ = damage & kill events, 2 = affinity pickups, 4 = weapons pickups" "<value>"
setdesc "aboveheadiconsize" "determines the size of icons handled by aboveheadicons" "<value>"
setdesc "aboveheadnames" "toggles the display of player names above their heads" "<value>"
setdesc "aboveheadnamesize" "determines the size of names for aboveheadnames" "<value>"
setdesc "aboveheadstatus" "toggles display of player status above players' heads, player status is dominating, dominated, death" "<value>"
setdesc "aboveheadstatussize" "determines the size of player status controlled by aboveheadstatus" "<value>"
setdesc "aboveheadteam" "determines how team icons are displayed above player heads; 0 = do not show, 1 = only teammates, 2 = all teams" "<value>"
setdesc "bloodsize" "sets the size of blood splatter" "<value>"
setdesc "chatconsize" "sets the amount of lines to show in the chat console, this does not include overflow lines" "<value>"
setdesc "chatconblend" "sets the opacity of the chat console" "<value>"
setdesc "conblend" "sets the opacity of the console, this does not include obituaries and affinity events! (flag, bomb)" "<value>"
setdesc "concenter" "toggles alignment of console; 0 = console is in top left, 1 = console is centered" "<value>"
setdesc "consize" "sets the amount of lines to show in the console, this does not include overflow lines" "<value>"
setdesc "criticaltex" "determines what image is used for the critical hit message" "<value>"
setdesc "dominatetex" "determines what image is used for the ^"dominating!^" event icon" "<value>"
setdesc "dominatedtex" "determines what image is used for the icon that appears over a player's head while dominating" "<value>"
setdesc "dominatingtex" "determines what image is used for the icon that appears over a player's head while being dominated" "<value>"
setdesc "eventblend" "sets the opacity of event icons, (first blood, 2x, 3x, headshot, etc.)" "<value>"
setdesc "eventiconfade" "sets how long event icons should stay on screen" "<value>"
setdesc "eventoffset" "sets the offset for the event icons in your hud, negative values move it downward, positive values move it upward" "<value>"
setdesc "eventscale" "sets the scale of event icons that appear in your hud" "<value>"
setdesc "fullconblend" "sets the opacity of the ^"full^" console, this is when the console is open, and includes obituaries and affinity events. (flag, bomb) excluding those two elements, conblend takes precedence over this variable, yet only affects everything else" "<value>"
setdesc "healthbgtex" "determines what image is used for the background of the healthbar" "<value>"
setdesc "hudblend" "sets the opacity of the entire hud as a whole, this includes both consoles, mouse pointer, and inventory" "<value>"
setdesc "hudsize" "sets the size of the entire hud as a whole, this includes both consoles, menus, inventory, etc" "<value>"
setdesc "inventoryblend" "sets the opacity of the inventory" "<value>"
setdesc "inventorycolour" "toggles the color of the weapon icons in the weapon bar; 0 = no color at all, 1 = only weapon icon is colored, 2 = both weapon icon and slot number are colored" "<value>"
setdesc "inventoryglow" "sets the size of the ^"glow^" in the inventory, the ^"glow^" is the splatter/explosion image behind inventory items" "<value>"
setdesc "inventorybgblend" "sets the opacity of the inventory background" "<value>"
setdesc "inventoryimpulse" "sets how the impulse meter is displayed; 0 = do not show at all, 1 = show textual percentage, 2 = show a bar meter" "<value>"
setdesc "impulsetex" "determines what image is used for the impulse meter" "<value>"
setdesc "inventorysize" "sets the size of the inventory as a whole" "<value>"
setdesc "inventorytone" "sets the tone of various inventory elements; 0 = no coloring at all, 1 = uses the color of your profile color, 2 = uses team color, this includes grey when you are neutral., 3 = uses team color, but only for team games. when neutral, your profile color is used., 4 = uses profile color, but only for team games. when neutral, grey will be used" "<value>"
setdesc "inventoryweapids" "sets how to display the slot number of the weapons in the weapon bar; 0 = do not show, 1 = do show, 2 = unknown" "<value>"
setdesc "noticescale" "sets the size of the notices" "<value>"
setdesc "zoomsensitivity" "determines aiming/look sensitivity while zoomed in with the rifle" "<value>"
setdesc "zoomtex" "determines what image is used for the scope on the rifle" "<value>"
setdesc "actorscale" "defines the size of all actors (players, bots, grunts, etc.)" "<value>"
setdesc "adminpass" "sets server admin password, if no password given, it will return the current password" "<value>"
setdesc "aiforcegun" "forces bots' weapon preference, if -1, bots have randomized weapon preferences" "<value>"
setdesc "aipassive" "sets ai to be passive, ie, non-hostile" "<value>"
setdesc "captureresetdelay" "time in milliseconds before a dropped flag automatically resets" "<milliseconds>"
setdesc "maxhealth" "spawnhealth * maxhealth defines the maximum amount of health that can be reached (e.g. standing next to a friendly goal)" "<value>"
setdesc "maxhealthvampire" "spawnhealth * maxhealthvampire defines the maximum amount of health that can be reached by damaging other players in vampire" "<value>"
setdesc "minresizescale" "defines the smallest scaled size a player can become in a match with the resize mutator enabled" "<value>"
setdesc "maxresizescale" "defines the largest scaled size a player can become in a match with the resize mutator enabled" "<value>"
setdesc "maxcarry" "maximum number of weapons a player can carry, plus pistol and grenades" "<value>"
setdesc "spawnhealth" "defines the amount of health you spawn with, and the maximum amount of health to which you will regenerate when damaged, assigning this variable a value of 0 or 1 will cause you to die in one hit" "<value>"
setdesc "zoomtime" "determines how long it takes for the rifle scope to zoom in and out, the rifle uses the primary fire mode unless the scope is fully zoomed in" "<value>"
setdesc "editmat" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<type> <style>"
setdesc "air" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "water" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "clip" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "glass" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "noclip" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "lava" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "death" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "aiclip" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "ladder" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "alpha" "modifies the material properties for the selected cubes, where style: 0 = normal, 1 = non-empty, 2 = empty, 3 = not entirely solid, 4 = entirely solid" "<style>"
setdesc "checkmaps" "reports if clients are using a modified map" ""
setdesc "serverclients" "maximum number of allowed clients" "<value>"
setdesc "serverdesc" "server description" "<text>"
setdesc "servermotd" "server message of the day" "<text>"
setdesc "serveropen" "determines server openness for public use; 0 = allow ^"setpriv 1^" and locked/private, 1 = allow ^"setpriv 1^" but no privileged mode, no locked/private, 2 = allow ^"setpriv 1^" but disallows private privileged mode (for public coop-editing), 3 = privilege only by moderator or admin" "<value>"
setdesc "autoadmin" "determines if authorities claim status by default" "<value>"
setdesc "airefresh" "delay imposed before the AI manager reorganises their setup" "<milliseconds>"
setdesc "modelockfilter" "determines the modes which are allowed to be used as dictated by modelock, convenient to set using a sum of $modebit* vars (available: editing, deathmatch, capture, defend, bomber, trial) example: (+ $modebitediting $modebitdeathmatch)" "<sum>"
setdesc "mutslockfilter" "determines the mutators which are allowed to be used as dictated by modelock, convenient to set using a sum of $mutsbit* vars (available: multi, team, coop, instagib, medieval, ballistic, duel, survivor, arena, onslaught, jetpack, vampire, expert, resize, gsp1 = first mode variation {ctf-return, dtf-quick, bomber-hold}, gsp2 = second mode variation {ctf-defend, dtf-conquer}, gsp3 = third mode variation {ctf-protect, dtf-king-of-the-hill}) example: (+ $mutsbitmulti $mutsbitteam)" "<sum>"
setdesc "gamespeed" "override gameplay speed" "<value>"
setdesc "gamepaused" "pauses the game, automatically unset by server" "<value>"
setdesc "defaultmap" "default map, ^"^" = random" "<map>"
setdesc "defaultmode" "default game mode; 1 = editing, 2 = deathmatch, 3 = ctf, 4 = dtf, 5 = bomber, 6 = trial" "<value>"
setdesc "defaultmuts" "default mutators, convenient to set using a sum of $mutsbit* vars (available: multi, team, coop, instagib, medieval, ballistic, duel, survivor, arena, onslaught, jetpack, vampire, expert, resize, gsp1 = first mode variation {ctf-return, dtf-quick, bomber-hold}, gsp2 = second mode variation {ctf-defend, dtf-conquer}, gsp3 = third mode variation {ctf-protect, dtf-king-of-the-hill}" "<sum>"
setdesc "rotatemaps" "determines behaviour of map rotation; 0 = off, 1 = sequence, 2 = random" "<value>"
setdesc "rotatemapsfilter" "0 = off, 1 = filter based on mutators, 2 = also filter based on players" "<value>"
setdesc "rotatemode" "determines if modes rotate when the server selects the next map" "<value>"
setdesc "allowmaps" "allowed maps" "<list>"
setdesc "mainmaps" "deathmatch maps" "<list>"
setdesc "capturemaps" "capture-the-flag maps" "<list>"
setdesc "defendmaps" "defend-the-flag maps" "<list>"
setdesc "bombermaps" "bomber-ball maps" "<list>"
setdesc "holdmaps" "hold bomber-ball maps" "<list>"
setdesc "trialmaps" "time-trial maps" "<list>"
setdesc "duelmaps" "duel map filter (extra filter on top of mode filter)" "<list>"
setdesc "jetpackmaps" "jetpack map filter (extra filter on top of mode filter)" "<list>"
setdesc "spawnweapon" "weapon players spawn with, defaults to pistol (1)" "<value>"
setdesc "instaweapon" "weapon players spawn with in instagib, defaults to rifle (7)" "<value>"
setdesc "trialweapon" "weapon players spawn with in trial, defaults to melee only (0)" "<value>"
setdesc "burntime" "time in milliseconds fire burns for, try to allow an extra 500ms breathing room for sync" "<milliseconds>"
setdesc "burndelay" "time in milliseconds for which fire burning deals damage" "<milliseconds>"
setdesc "burndamage" "amount of damage fire burning deals" "<value>"
setdesc "bleedtime" "time in milliseconds bleeding lasts for, try to allow an extra 500ms breathing room for sync" "<milliseconds>"
setdesc "bleeddelay" "time in milliseconds for which bleeding deals damage" "<value>"
setdesc "bleeddamage" "amount of damage bleeding deals" "<value>"
setdesc "triallimit" "time in milliseconds after the first player crosses the finishing line in a non-looping trial map players have to complete" "<milliseconds>"
setdesc "botskillmin" "minimum randomly assigned AI skill level" "<value>"
setdesc "botskillmax" "maximum randomly assigned AI skill level" "<value>"
setdesc "botscale" "scale the 'numplayers' world variable which determines bot auto population" "<value>"
setdesc "botlimit" "maximum number of bots allowed, regardless of any other variable/setting" "<value>"
setdesc "enemybalance" "multiply number of enemy spawns by this much" "<value>"
setdesc "gravityforce" "overrides world variable: gravity" "<value>"
setdesc "gravityscale" "multiply gravity by this much" "<value>"
setdesc "liquidspeedforce" "overrides world variable: liquidspeed" "<value>"
setdesc "liquidspeedscale" "multiply liquidspeed by this much" "<value>"
setdesc "liquidcoastforce" "overrides world variable: liquidcoast" "<value>"
setdesc "liquidcoastscale" "multiply liquidcoast by this much" "<value>"
setdesc "floorcoastforce" "overrides world variable: floorcoast" "<value>"
setdesc "floorcoastscale" "multiply floorcoast by this much" "<value>"
setdesc "aircoastforce" "overrides world variable: aircoast" "<value>"
setdesc "aircoastscale" "multiply aircoast by this much" "<value>"
setdesc "slidecoastforce" "overrides world variable: slidecoast" "<value>"
setdesc "slidecoastscale" "multiply slidecoast by this much" "<value>"
setdesc "stillspread" "multiply projectile spread by this much when standing still" "<value>"
setdesc "movespread" "multiply projectile spread by this much when moving" "<value>"
setdesc "inairspread" "multiply projectile spread by this much when jumping/in-air" "<value>"
setdesc "impulsespread" "multiply projectile spread by this much when impulsing/sprinting/jetpacking" "<value>"
setdesc "explodescale" "multiply explosion radius by this amount" "<value>"
setdesc "explodelimited" "multiply explosion radius by this amount in limited situations (eg. instagib)" "<value>"
setdesc "damagescale" "scale damage by this amount" "<value>"
setdesc "criticalchance" "offset of hits that do damage in which criticals can occur" "<value>"
setdesc "hitpushscale" "scale hit pushes by this amount" "<value>"
setdesc "hitslowscale" "multiply ^"slow target on hit^" by this amount" "<value>"
setdesc "deadpushscale" "scale hit pushes by this amount when it results in a frag" "<value>"
setdesc "wavepushscale" "scale of the hitpush force used in a wavepush" "<value>"
setdesc "kickpushscale" "multiply kick pushes from weapons by this much" "<value>"
setdesc "kickpushcrouch" "multiply kick pushes from weapons by this much when crouching" "<value>"
setdesc "kickpushsway" "multiply kick push effect on hud gun sway by this much" "<value>"
setdesc "kickpushzoom" "multiply kick pushes from weapons by this much when zoomed" "<value>"
setdesc "multikilldelay" "time in milliseconds multiple kills in a row must occur" "<value>"
setdesc "spreecount" "number of consecutive frags for each spree level" "<value>"
setdesc "dominatecount" "number of frags on a single player without revenge before it is considered domination" "<value>"

looplist w $weapname [
    setdesc (concatword $w add) "the amount added when picking up the weapon or reloading it" "<value>"
    setdesc (concatword $w max) "the maximum amount the clip of this weapon can hold, can never be higher than default" "<value>"
    setdesc (concatword $w rdelay) "the time it takes for the weapon to reload one 'add' unit" "<milliseconds>"
    setdesc (concatword $w reloads) "boolean 0 or 1, determines if this weapon can reload" "<value>"
    setdesc (concatword $w zooms) "boolean 0 or 1, determines if the secondary action on this weapon zooms" "<value>"
    setdesc (concatword $w allowed) "determines if this weapon type is allowed to spawn at all, 0 = off, 1 = all but insta/duel, 2 = all but insta, 3 = always" "<value>"
    setdesc (concatword $w laser) "determines if this weapon has a laser pointer which is projected to the point where the player is aiming" "<value>"
    setdesc (concatword $w frequency) "determines the multiplier of itemspawntime in which items of this type respawn in" "<value>"
    setdesc (concatword $w pusharea) "determines the multiplier of explode radius this weapon pushes in" "<value>"
    setdesc (concatword $w critmult) "determines the multiplier of damage when a critical hit is done (can be zero for off)" "<value>"
    setdesc (concatword $w critdist) "determines the distance at which the chance of a critical is multiplied linearly toward target" "<distance>"

    loop n 2 [
        m = (+ $n 1)
        setdesc (concatword $w sub $m) "the amount taken from the clip for each firing action, set to zero for unlimited ammo" "<value>"
        setdesc (concatword $w adelay $m) "the time it takes after each firing action for the weapon to be ready again" "<milliseconds>"
        setdesc (concatword $w damage $m) "the amount of damage a projectile from each firing action does" "<value>"
        setdesc (concatword $w speed $m) "the speed of a projectile from each firing action" "<value>"
        setdesc (concatword $w power $m) "when more than zero, determines that the weapon can be 'cooked' this long before firing" "<value>"
        setdesc (concatword $w time $m) "the maximum lifetime of a projectile for each firing action" "<milliseconds>"
        setdesc (concatword $w pdelay $m) "when more than zero, projectiles from this weapon will be delayed this long" "<milliseconds>"
        setdesc (concatword $w gdelay $m) "when more than zero, projectiles from this weapon will delay guided settings by this long" "<milliseconds>"
        setdesc (concatword $w edelay $m) "when more than zero, projectiles from this weapon will not be able to hurt its owner for this long" "<milliseconds>"
        setdesc (concatword $w explode $m) "determines the explosion radius for a particle of this firing action" "<value>"
        setdesc (concatword $w rays $m) "the amount of projectiles spawned from one shot of each firing action" "<value>"
        setdesc (concatword $w spread $m) "determines the amount a projectile from each firing action skews off-center" "<value>"
        setdesc (concatword $w zdiv $m) "when zero, keeps spread projectiles aligned horizontally, else divide the z axis this much" "<value>"
        setdesc (concatword $w aiskew $m) "determines 'added stupidity' for each weapon for AI counterparts" "<value>"
        setdesc (concatword $w flakweap $m) "when projectiles from this firing action are destroyed, create projectiles from this kind of weapon (+10 = alt fire for the weapon)" "<value>"
        setdesc (concatword $w flakdmg $m) "flak of this type deals this much damage" "<value>"
        setdesc (concatword $w flakrays $m) "when creating flak, create this many projectiles for it" "<value>"
        setdesc (concatword $w flaktime $m) "flak projectiles from this weapon last this long" "<milliseconds>"
        setdesc (concatword $w flakspeed $m) "flak projectiles from this weapon start with this much speed (may be influenced by flakspread/flakskew and flakrel)" "<value>"
        setdesc (concatword $w collide $m) "determines collision properties for a projectile from each firing action (bitwise OR); IMPACT_GEOM = 1, BOUNCE_GEOM = 2, IMPACT_PLAYER = 4, BOUNCE_PLAYER = 8, RADIAL_PLAYER = 16, COLLIDE_TRACE = 32, COLLIDE_OWNER = 64, COLLIDE_CONT = 128, COLLIDE_STICK = 256" "<sum>"
        setdesc (concatword $w extinguish $m) "determines if a projectile from each firing action is extinguished by water" "<value>"
        setdesc (concatword $w cooked $m) "determines cooking style for a projectile, 0 = off, 1 = scale size, 2 = shorten life (+1 no scale), 4 = lengthen life (+1 no scale)" "<value>"
        setdesc (concatword $w guided $m) "determines guided style for a projectile, 0 = off, 1 = follow crosshair, 2 = home crosshair target (+1 only first target), 4 = home projectile target (+1 only first target)" "<value>"
        setdesc (concatword $w radial $m) "determines the time between ticks of ^"continuous^" radial damage, starts counting from first ^"radiation^"" "<milliseconds>"

        setdesc (concatword $w residual $m) "boolean 0 or 1, determines if a projectile from each firing action has a residual effect, 0 = off, 1 = burns, 2 = bleeds" "<value>"
        setdesc (concatword $w fullauto $m) "boolean 0 or 1, determines if each firing action is fully automatic (click-and-hold) or not (click-and-click)" "<value>"
        setdesc (concatword $w critdash $m) "when more than zero, this weapon will always deal a critical hit this long after an impulse dash" "<value>"
        setdesc (concatword $w taperin $m) "determines the fraction of the lifetime from the start until the projectile reaches its full size" "<value>"
        setdesc (concatword $w taperout $m) "determines the fraction of the lifetime from the end where the projectile size ^"fades out^"" "<value>"
        setdesc (concatword $w elasticity $m) "multiplier of velocity for a projectile of each firing action when doing a bounce event" "<value>"
        setdesc (concatword $w reflectivity $m) "guard angle for a projectile of each firing action when doing a bounce event" "<angle>"
        setdesc (concatword $w relativity $m) "multiplier of player velocity added to a projectile of each firing action" "<value>"
        setdesc (concatword $w waterfric $m) "multiplier of velocity for a projectile of each firing action when in water" "<value>"
        setdesc (concatword $w weight $m) "relative weight for a projectile of each firing action" "<value>"
        setdesc (concatword $w radius $m) "determines the size for a projectile of each firing action" "<value>"
        setdesc (concatword $w kickpush $m) "determines the amount of pushback from shooting each firing action" "<value>"
        setdesc (concatword $w hitpush $m) "multiplier of damage for a projectile or explosion of each firing action impacting a player" "<value>"
        setdesc (concatword $w slow $m) "slow target hit with a projectile from this by this ammount" "<value>"
        setdesc (concatword $w aidist $m) "determines the 'maximum distance' a weapon can be shot at, used by AI to determine weapon effectiveness ranges" "<distance>"
        setdesc (concatword $w partsize $m) "determines the maximum particle size of a projectile from each firing action" "<value>"
        setdesc (concatword $w partlen $m) "determines the maximum tape particle length of a projectile from each firing action" "<value>"
        setdesc (concatword $w delta $m) "determines the amount by which each firing action is guided" "<value>"
        setdesc (concatword $w trace $m) "determines the multiplier of length to apply to traced weapons" "<value>"
        setdesc (concatword $w torsodmg $m) "determines the multiplier of damage for torso shots" "<value>"
        setdesc (concatword $w legsdmg $m) "determines the multiplier of damage for leg shots" "<value>"
        setdesc (concatword $w flakscale $m) "flak created by this firing action is scaled by this much" "<value>"
        setdesc (concatword $w flakspread $m) "flak created by this firing action spreads its direction randomly by this much if it doesn't impact a player" "<value>"
        setdesc (concatword $w flakrel $m) "flak created by this firing action retains this much of its parent relative momentum" "<value>"
        setdesc (concatword $w flakffwd $m) "flak created by this firing action fast-forwards its lifecycle by this multiplier" "<value>"
        setdesc (concatword $w flakoffset $m) "flak created by this firing action is offset by this distance if it impacts a player before being created" "<value>"
        setdesc (concatword $w flakskew $m) "flak created by this firing action spreads its direction randomly by this much when it impacts a player" "<value>"
    ]
]
